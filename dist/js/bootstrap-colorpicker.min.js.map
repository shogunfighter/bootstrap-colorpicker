/*!
 * Bootstrap Colorpicker - Simple and customizable colorpicker component for Twitter Bootstrap.
 * @package bootstrap-colorpicker
 * @version v3.0.0-wip
 * @license MIT
 * @link https://farbelous.github.io/bootstrap-colorpicker/
 * @link https://github.com/farbelous/bootstrap-colorpicker.git
 */
{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///bootstrap-colorpicker.min.js","webpack:///webpack/bootstrap c1d5ee160f686fbc66b6","webpack:///external \"jQuery\"","webpack:///./src/js/jquery-plugin.js","webpack:///./src/js/Colorpicker.js","webpack:///./src/js/Color.js","webpack:///./node_modules/tinycolor2/tinycolor.js","webpack:///./src/js/defaults.js"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE_0__","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","_interopRequireDefault","obj","default","_typeof","Symbol","iterator","constructor","_Colorpicker","_Colorpicker2","_jquery","_jquery2","plugin","fn","option","apiArgs","Array","slice","arguments","isSingleElement","length","returnValue","$jq","each","$this","inst","data","options","isFunction","apply","_classCallCheck","instance","Constructor","TypeError","value","_createClass","defineProperties","target","props","descriptor","writable","key","protoProps","staticProps","_Color","_Color2","_defaults","_defaults2","Colorpicker","element","addClass","extend","component","find","container","currentSlider","mousePointer","left","top","input","is","color","createColor","getValue","disabled","$picker","picker","template","customClass","inline","horizontal","useAlpha","hasColor","hasTransparency","align","colorPalette","colorpicker","selectorsContainer","$btn","css","attr","on","event","preventDefault","setValue","append","show","proxy","e","currentTarget","mousedown","appendTo","keyup.colorpicker","keyup","change.colorpicker","change","focus.colorpicker","focusout.colorpicker","hide","click.colorpicker","update","trigger","set","remove","removeData","off","removeClass","type","str","toString","format","useHashPrefix","replace","getPaletteColorName","window","document","body","offset","outerWidth","outerHeight","isDisabled","reposition","hasInput","stopPropagation","mousedown.colorpicker","parents","prop","getColorString","vertical","sl","sliders","slidersHorz","saturationGuide","hueGuide","alphaGuide","hsva","hsvaRatio","hue","maxTop","maxLeft","h","alpha","a","saturation","v","getHueOnlyCopy","toHexString","toRgbString","icn","eq","backgroundColor","getCssColorString","force","updateComponent","updateInput","updatePicker","defaultValue","undefined","fallbackColor","candidates","val","push","map","item","fallback","getPaletteColor","getOpaqueCopy","colorName","colorValue","toLowerCase","pageX","pageY","originalEvent","touches","zone","closest","guide","style","mousemove.colorpicker","mousemove","touchmove.colorpicker","mouseup.colorpicker","mouseup","touchend.colorpicker","Math","max","min","callLeft","callTop","match","enableHex8","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","setPrototypeOf","__proto__","unwrapColor","r","_r","g","_g","b","_b","_a","_get","receiver","Function","desc","getOwnPropertyDescriptor","parent","getPrototypeOf","_tinycolor2","_tinycolor3","defaultFallbackColor","Color","_tinycolor","_this","_originalInput","_fallbackColor","_validOrFallback","_tc_id","_format","gradientType","_gradientType","toHsv","hsv","Error","_roundA","_ok","importRgb","isValid","fallbackOptions","assign","importColor","importHsv","setHue","setSaturation","setBrightness","setAlpha","colorStr","isTransparent","names","__WEBPACK_AMD_DEFINE_RESULT__","tinycolor","opts","rgb","inputToRGB","mathRound","ok","tinyCounter","stringInputToObject","isValidCSSUnit","rgbToRgb","String","substr","convertToPercentage","hsvToRgb","hslToRgb","boundAlpha","mathMin","mathMax","bound01","rgbToHsl","hue2rgb","q","t","rgbToHsv","floor","f","mod","rgbToHex","allow3Char","hex","pad2","charAt","join","rgbaToHex","allow4Char","convertDecimalToHex","rgbaToArgbHex","desaturate","amount","hsl","toHsl","clamp01","saturate","greyscale","lighten","brighten","toRgb","darken","spin","complement","triad","tetrad","splitcomplement","analogous","results","slices","part","ret","monochromatic","modification","parseFloat","isNaN","isOnePointZero","processPercent","isPercentage","parseInt","abs","parseIntFromHex","indexOf","round","convertHexToDecimal","matchers","CSS_UNIT","exec","trimLeft","trimRight","named","rgba","hsla","hex8","hex6","hex4","hex3","validateWCAG2Parms","parms","level","size","toUpperCase","mathRandom","random","isDark","getBrightness","isLight","getOriginalInput","getFormat","getAlpha","getLuminance","RsRGB","GsRGB","BsRGB","R","G","B","pow","toHsvString","toHslString","toHex","toHex8","toHex8String","toPercentageRgb","toPercentageRgbString","toName","hexNames","toFilter","secondColor","hex8String","secondHex8String","formatSet","formattedString","hasAlpha","clone","_applyModification","args","concat","_applyCombination","fromRatio","newColor","equals","color1","color2","mix","rgb1","rgb2","readability","c1","c2","isReadable","wcag2","wcag2Parms","out","mostReadable","baseColor","colorList","includeFallbackColors","bestColor","bestScore","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","burntsienna","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","flipped","PERMISSIVE_MATCH3","PERMISSIVE_MATCH4","RegExp"],"mappings":"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","file":"bootstrap-colorpicker.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"jQuery\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"bootstrap-colorpicker\", [\"jQuery\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"bootstrap-colorpicker\"] = factory(require(\"jQuery\"));\n\telse\n\t\troot[\"bootstrap-colorpicker\"] = factory(root[\"jQuery\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_0__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"jQuery\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"bootstrap-colorpicker\", [\"jQuery\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"bootstrap-colorpicker\"] = factory(require(\"jQuery\"));\n\telse\n\t\troot[\"bootstrap-colorpicker\"] = factory(root[\"jQuery\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_0__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 1);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_0__;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _Colorpicker = __webpack_require__(2);\n\nvar _Colorpicker2 = _interopRequireDefault(_Colorpicker);\n\nvar _jquery = __webpack_require__(0);\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar plugin = 'colorpicker';\n\n_jquery2.default[plugin] = _Colorpicker2.default;\n\n_jquery2.default.fn[plugin] = function (option) {\n  var apiArgs = Array.prototype.slice.call(arguments, 1),\n      isSingleElement = this.length === 1,\n      returnValue = null;\n\n  var $jq = this.each(function () {\n    var $this = (0, _jquery2.default)(this),\n        inst = $this.data(plugin),\n        options = (typeof option === 'undefined' ? 'undefined' : _typeof(option)) === 'object' ? option : {};\n\n    if (!inst) {\n      inst = new _Colorpicker2.default(this, options);\n      $this.data(plugin, inst);\n    }\n\n    if (typeof option === 'string') {\n      if (_jquery2.default.isFunction(inst[option])) {\n        returnValue = inst[option].apply(inst, apiArgs);\n      } else {\n        // its a property ?\n        if (apiArgs.length) {\n          // set property\n          inst[option] = apiArgs[0];\n        }\n        returnValue = inst[option];\n      }\n    } else {\n      returnValue = $this;\n    }\n  });\n\n  return isSingleElement ? returnValue : $jq;\n};\n\n_jquery2.default.fn[plugin].constructor = _Colorpicker2.default;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * @module\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _Color = __webpack_require__(3);\n\nvar _Color2 = _interopRequireDefault(_Color);\n\nvar _defaults = __webpack_require__(5);\n\nvar _defaults2 = _interopRequireDefault(_defaults);\n\nvar _jquery = __webpack_require__(0);\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Colorpicker widget class\n */\nvar Colorpicker = function () {\n  _createClass(Colorpicker, [{\n    key: 'color',\n\n\n    /**\n     * color getter\n     *\n     * @type {Color|null}\n     */\n    get: function get() {\n      return this.element.data('color');\n    }\n\n    /**\n     * color setter\n     *\n     * @ignore\n     * @param {Color|null} value\n     */\n    ,\n    set: function set(value) {\n      this.element.data('color', value);\n    }\n\n    /**\n     * @fires create\n     * @param {Object|String} element\n     * @param {Object} options\n     * @constructor\n     */\n\n  }], [{\n    key: 'Color',\n\n    /**\n     * Color class\n     *\n     * @static\n     * @type {Color}\n     */\n    get: function get() {\n      return _Color2.default;\n    }\n  }]);\n\n  function Colorpicker(element, options) {\n    _classCallCheck(this, Colorpicker);\n\n    /**\n     * @type {*|jQuery}\n     */\n    this.element = (0, _jquery2.default)(element).addClass('colorpicker-element');\n    /**\n     * @type {defaults}\n     */\n    this.options = _jquery2.default.extend(true, {}, _defaults2.default, this.element.data(), options);\n    /**\n     * @type {*|jQuery}\n     */\n    this.component = this.options.component;\n    this.component = this.component !== false ? this.element.find(this.component) : false;\n    if (this.component && this.component.length === 0) {\n      this.component = false;\n    }\n    /**\n     * @type {*|jQuery}\n     */\n    this.container = this.options.container === true ? this.element : this.options.container;\n    this.container = this.container !== false ? (0, _jquery2.default)(this.container) : false;\n    /**\n     * @type {*|String}\n     * @private\n     */\n    this.currentSlider = null;\n    /**\n     * @type {{left: number, top: number}}\n     * @private\n     */\n    this.mousePointer = {\n      left: 0,\n      top: 0\n    };\n\n    // Is the element an input? Should we search inside for any input?\n    /**\n     * @type {*|jQuery}\n     */\n    this.input = this.element.is('input') ? this.element : this.options.input ? this.element.find(this.options.input) : false;\n\n    if (this.input && this.input.length === 0) {\n      this.input = false;\n    }\n\n    this.color = this.createColor(this.options.color !== false ? this.options.color : this.getValue());\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.disabled = false;\n\n    // Setup picker\n    var $picker = this.picker = (0, _jquery2.default)(this.options.template);\n\n    if (this.options.customClass) {\n      $picker.addClass(this.options.customClass);\n    }\n    if (this.options.inline) {\n      $picker.addClass('colorpicker-inline colorpicker-visible');\n    } else {\n      $picker.addClass('colorpicker-hidden');\n    }\n    if (this.options.horizontal) {\n      $picker.addClass('colorpicker-horizontal');\n    }\n\n    if ((this.options.useAlpha || this.hasColor() && this.color.hasTransparency()) && this.options.useAlpha !== false) {\n      this.options.useAlpha = true;\n      $picker.addClass('colorpicker-with-alpha');\n    }\n\n    if (this.options.align === 'right') {\n      $picker.addClass('colorpicker-right');\n    }\n    if (this.options.inline === true) {\n      $picker.addClass('colorpicker-no-arrow');\n    }\n    if (this.options.colorPalette) {\n      var colorpicker = this,\n          selectorsContainer = colorpicker.picker.find('.colorpicker-palette');\n\n      if (selectorsContainer.length > 0) {\n        _jquery2.default.each(this.options.colorPalette, function (name, value) {\n          var $btn = (0, _jquery2.default)('<i />').addClass('colorpicker-palette-color').css('background-color', value).attr('title', name + ': ' + value).data('class', name).data('alias', name);\n\n          $btn.on('mousedown.colorpicker touchstart.colorpicker', function (event) {\n            event.preventDefault();\n            colorpicker.setValue((0, _jquery2.default)(this).data('alias'));\n          });\n          selectorsContainer.append($btn);\n        });\n        selectorsContainer.show().addClass('colorpicker-visible');\n      }\n    }\n\n    // Prevent closing the colorpicker when clicking on itself\n    $picker.on('mousedown.colorpicker touchstart.colorpicker', _jquery2.default.proxy(function (e) {\n      if (e.target === e.currentTarget) {\n        e.preventDefault();\n      }\n    }, this));\n\n    // Bind click/tap events on the sliders\n    $picker.find('.colorpicker-saturation, .colorpicker-hue, .colorpicker-alpha').on('mousedown.colorpicker touchstart.colorpicker', _jquery2.default.proxy(this.mousedown, this));\n\n    $picker.appendTo(this.container ? this.container : (0, _jquery2.default)('body'));\n\n    // Bind other events\n    if (this.input !== false) {\n      this.input.on({\n        'keyup.colorpicker': _jquery2.default.proxy(this.keyup, this)\n      });\n      this.input.on({\n        'change.colorpicker': _jquery2.default.proxy(this.change, this)\n      });\n      if (this.component === false) {\n        this.element.on({\n          'focus.colorpicker': _jquery2.default.proxy(this.show, this)\n        });\n      }\n      if (this.options.inline === false) {\n        this.element.on({\n          'focusout.colorpicker': _jquery2.default.proxy(this.hide, this)\n        });\n      }\n    }\n\n    if (this.component !== false) {\n      this.component.on({\n        'click.colorpicker': _jquery2.default.proxy(this.show, this)\n      });\n    }\n\n    if (this.input === false && this.component === false) {\n      this.element.on({\n        'click.colorpicker': _jquery2.default.proxy(this.show, this)\n      });\n    }\n\n    // for HTML5 input[type='color']\n    if (this.input !== false && this.component !== false && this.input.attr('type') === 'color') {\n      this.input.on({\n        'click.colorpicker': _jquery2.default.proxy(this.show, this),\n        'focus.colorpicker': _jquery2.default.proxy(this.show, this)\n      });\n    }\n\n    this.update(this.options.color !== false);\n\n    (0, _jquery2.default)(_jquery2.default.proxy(function () {\n      /**\n       * (Colorpicker) When the Colorpicker instance has been created and the DOM is ready.\n       *\n       * @event create\n       */\n      this.element.trigger('create');\n    }, this));\n  }\n\n  /**\n   * Destroys the current instance\n   *\n   * @fires destroy\n   */\n\n\n  _createClass(Colorpicker, [{\n    key: 'destroy',\n    value: function destroy() {\n      this.picker.remove();\n      this.element.removeData('colorpicker', 'color').off('.colorpicker');\n      if (this.input !== false) {\n        this.input.off('.colorpicker');\n      }\n      if (this.component !== false) {\n        this.component.off('.colorpicker');\n      }\n      this.element.removeClass('colorpicker-element');\n\n      /**\n       * (Colorpicker) When the instance is destroyed with all events unbound.\n       *\n       * @event destroy\n       */\n      this.element.trigger({\n        type: 'destroy'\n      });\n    }\n\n    /**\n     * Returns true if the current color object is an instance of Color, false otherwise.\n     * @returns {boolean}\n     */\n\n  }, {\n    key: 'hasColor',\n    value: function hasColor() {\n      return this.color instanceof _Color2.default;\n    }\n  }, {\n    key: 'getColorString',\n\n\n    /**\n     * Formatted color string, translated to the palette alias if available and with the other formatting options applied\n     * (e.g. useHashPrefix)\n     * @returns {String}\n     */\n    value: function getColorString() {\n      var str = this.color.toString(this.format);\n\n      if (this.options.useHashPrefix === false) {\n        str = str.replace(/^#/g, '');\n      }\n\n      return this.getPaletteColorName(str, this.getPaletteColorName('#' + str, str));\n    }\n\n    /**\n     * Formatted color string, suitable for CSS\n     * @returns {String}\n     */\n\n  }, {\n    key: 'getCssColorString',\n    value: function getCssColorString() {\n      return this.color.toString(this.format);\n    }\n\n    /**\n     * If the widget is not inside a container or inline, rearranges its position relative to its element offset.\n     *\n     * @returns {boolean} Returns false if the widget is inside a container or inline, true otherwise\n     */\n\n  }, {\n    key: 'reposition',\n    value: function reposition() {\n      if (this.options.inline !== false || this.options.container) {\n        return false;\n      }\n      var type = this.container && this.container[0] !== window.document.body ? 'position' : 'offset';\n      var element = this.component || this.element;\n      var offset = element[type]();\n\n      if (this.options.align === 'right') {\n        offset.left -= this.picker.outerWidth() - element.outerWidth();\n      }\n      this.picker.css({\n        top: offset.top + element.outerHeight(),\n        left: offset.left\n      });\n      return true;\n    }\n\n    /**\n     * Shows the colorpicker widget if hidden.\n     * If the input is disabled this call will be ignored.\n     *\n     * @fires showPicker\n     * @param {Event} [e]\n     */\n\n  }, {\n    key: 'show',\n    value: function show(e) {\n      if (this.isDisabled()) {\n        // Don't show the widget if it's disabled (the input)\n        return;\n      }\n      this.picker.addClass('colorpicker-visible').removeClass('colorpicker-hidden');\n      this.reposition();\n      (0, _jquery2.default)(window).on('resize.colorpicker', _jquery2.default.proxy(this.reposition, this));\n\n      if (e && (!this.hasInput() || this.input.attr('type') === 'color')) {\n        if (e.stopPropagation && e.preventDefault) {\n          e.stopPropagation();\n          e.preventDefault();\n        }\n      }\n      if ((this.component || !this.input) && this.options.inline === false) {\n        (0, _jquery2.default)(window.document).on({\n          'mousedown.colorpicker': _jquery2.default.proxy(this.hide, this)\n        });\n      }\n\n      /**\n       * (Colorpicker) When show() is called and the widget can be shown.\n       *\n       * @event showPicker\n       */\n      this.element.trigger({\n        type: 'showPicker',\n        color: this.color\n      });\n    }\n\n    /**\n     * Hides the colorpicker widget.\n     * Hide is prevented when it is triggered by an event whose target element has been clicked/touched.\n     *\n     * @fires hidePicker\n     * @param {Event} [e]\n     * @returns {boolean} True if hidden, false if prevented.\n     */\n\n  }, {\n    key: 'hide',\n    value: function hide(e) {\n      if (typeof e !== 'undefined' && e.target) {\n        // Prevent hide if triggered by an event and an element inside the colorpicker has been clicked/touched\n        if ((0, _jquery2.default)(e.currentTarget).parents('.colorpicker').length > 0 || (0, _jquery2.default)(e.target).parents('.colorpicker').length > 0) {\n          return false;\n        }\n      }\n      this.picker.addClass('colorpicker-hidden').removeClass('colorpicker-visible');\n      (0, _jquery2.default)(window).off('resize.colorpicker', this.reposition);\n      (0, _jquery2.default)(window.document).off({\n        'mousedown.colorpicker': this.hide\n      });\n      this.update();\n\n      /**\n       * (Colorpicker) When hide() is called and the widget can be hidden.\n       *\n       * @event hidePicker\n       */\n      this.element.trigger({\n        type: 'hidePicker',\n        color: this.color\n      });\n      return true;\n    }\n\n    /**\n     * If the input element is present, it updates the value with the current color object color string.\n     * If value is set, this method fires a \"change\" event on the input element.\n     *\n     * @fires change\n     */\n\n  }, {\n    key: 'updateInput',\n    value: function updateInput() {\n      if (this.input !== false) {\n        this.input.prop('value', this.getColorString());\n\n        /**\n         * (Input) Triggered on the input element when a new color is selected.\n         *\n         * @event change\n         */\n        this.input.trigger('change');\n      }\n    }\n\n    /**\n     * Changes the color adjustment bars using the current color object information.\n     */\n\n  }, {\n    key: 'updatePicker',\n    value: function updatePicker() {\n      if (!this.hasColor()) {\n        return;\n      }\n\n      var vertical = this.options.horizontal === false,\n          sl = vertical ? this.options.sliders : this.options.slidersHorz;\n\n      var saturationGuide = this.picker.find('.colorpicker-saturation .colorpicker-guide'),\n          hueGuide = this.picker.find('.colorpicker-hue .colorpicker-guide'),\n          alphaGuide = this.picker.find('.colorpicker-alpha .colorpicker-guide');\n\n      var hsva = this.color.hsvaRatio;\n\n      if (hueGuide.length) {\n        hueGuide.css(vertical ? 'top' : 'left', (vertical ? sl.hue.maxTop : sl.hue.maxLeft) * (1 - hsva.h));\n      }\n\n      if (alphaGuide.length) {\n        alphaGuide.css(vertical ? 'top' : 'left', (vertical ? sl.alpha.maxTop : sl.alpha.maxLeft) * (1 - hsva.a));\n      }\n\n      if (saturationGuide.length) {\n        saturationGuide.css({\n          'top': sl.saturation.maxTop - hsva.v * sl.saturation.maxTop,\n          'left': hsva.s * sl.saturation.maxLeft\n        });\n      }\n\n      this.picker.find('.colorpicker-saturation').css('backgroundColor', this.color.getHueOnlyCopy().toHexString()); // we only need hue\n\n      this.picker.find('.colorpicker-alpha').css('backgroundColor', this.color.toString('hex6')); // we don't need alpha\n\n      this.picker.find('.colorpicker-color, .colorpicker-color div').css('backgroundColor', this.color.toRgbString()); // we need all the channels\n    }\n\n    /**\n     * If the component element is present, its background color is updated\n     */\n\n  }, {\n    key: 'updateComponent',\n    value: function updateComponent() {\n      if (!this.hasColor()) {\n        return;\n      }\n\n      if (this.component !== false) {\n        var icn = this.component.find('i').eq(0);\n\n        if (icn.length > 0) {\n          icn.css({\n            'backgroundColor': this.getCssColorString()\n          });\n        } else {\n          this.component.css({\n            'backgroundColor': this.getCssColorString()\n          });\n        }\n      }\n    }\n\n    /**\n     * Updated the component color, the input value and the widget if a color is present.\n     *\n     * If force is true, it is updated anyway.\n     *\n     * @param {boolean} force\n     */\n\n  }, {\n    key: 'update',\n    value: function update(force) {\n      if (this.hasColor() && (this.getValue(false) !== false || force === true)) {\n        // Update only if the current value (from input or data) is not empty\n        this.updateComponent();\n        this.updateInput();\n        this.updatePicker();\n      }\n    }\n\n    /**\n     * Returns the color string from the input value or the 'data-color' attribute of the input or element.\n     * If empty, it returns the defaultValue parameter.\n     *\n     * @param {String|*} [defaultValue]\n     * @returns {String|*}\n     */\n\n  }, {\n    key: 'getValue',\n    value: function getValue() {\n      var defaultValue = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\n      defaultValue = typeof defaultValue === 'undefined' ? this.options.fallbackColor : defaultValue;\n      var candidates = [],\n          val = false;\n\n      if (this.hasInput()) {\n        candidates.push(this.input.val());\n        candidates.push(this.input.data('color'));\n      }\n      candidates.push(this.element.data('color'));\n\n      candidates.map(function (item) {\n        if (item && val === false) {\n          val = item;\n        }\n      });\n\n      val = val === false ? defaultValue : val;\n\n      if (val instanceof _Color2.default) {\n        return val.toString(this.format);\n      }\n\n      return val;\n    }\n\n    /**\n     * Sets the color manually\n     *\n     * @fires changeColor\n     * @param {String|Color} val\n     */\n\n  }, {\n    key: 'setValue',\n    value: function setValue(val) {\n      this.color = this.createColor(val);\n      this.update(true);\n\n      /**\n       * (Colorpicker) When the color is set programmatically with setValue().\n       *\n       * @event changeColor\n       */\n      this.element.trigger({\n        type: 'changeColor',\n        color: this.color,\n        value: val\n      });\n    }\n\n    /**\n     * Creates a new color using the widget instance options (fallbackColor, format).\n     *\n     * @param {*} val\n     * @returns {Color}\n     */\n\n  }, {\n    key: 'createColor',\n    value: function createColor(val) {\n      val = val ? val : null;\n      var fallback = this.options.fallbackColor ? this.options.fallbackColor : this.hasColor() ? this.color.hsva : null;\n\n      val = this.getPaletteColor(val, val);\n      fallback = this.getPaletteColor(fallback, fallback);\n\n      var color = new _Color2.default(val, { fallbackColor: fallback, format: this.format });\n\n      if (color.hasTransparency() && !this.options.useAlpha) {\n        // alpha is disabled\n        return color.getOpaqueCopy();\n      }\n\n      return color;\n    }\n\n    /**\n     * Given a colorName (alias), returns the corresponding color code or defaultValue.\n     *\n     * @param {String} colorName\n     * @param {*} defaultValue\n     * @returns {*}\n     */\n\n  }, {\n    key: 'getPaletteColor',\n    value: function getPaletteColor(colorName) {\n      var defaultValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n      if (!(typeof colorName === 'string') || !this.options.colorPalette) {\n        return defaultValue;\n      }\n      if (this.options.colorPalette.hasOwnProperty(colorName)) {\n        return this.options.colorPalette[colorName];\n      }\n      return defaultValue;\n    }\n\n    /**\n     * Given a colorValue, returns the corresponding color name (alias) or defaultValue.\n     *\n     * @param {String} colorValue\n     * @param {*} defaultValue\n     * @returns {*}\n     */\n\n  }, {\n    key: 'getPaletteColorName',\n    value: function getPaletteColorName(colorValue) {\n      var defaultValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n      if (!(typeof colorValue === 'string') || !this.options.colorPalette) {\n        return defaultValue;\n      }\n      for (var colorName in this.options.colorPalette) {\n        if (!this.options.colorPalette.hasOwnProperty(colorName)) {\n          continue;\n        }\n        if (this.options.colorPalette[colorName].toLowerCase() === colorValue.toLowerCase()) {\n          return colorName;\n        }\n      }\n      return defaultValue;\n    }\n\n    /**\n     * Returns true if the widget has an associated input element, false otherwise\n     * @returns {boolean}\n     */\n\n  }, {\n    key: 'hasInput',\n    value: function hasInput() {\n      return this.input !== false;\n    }\n\n    /**\n     * Returns true if this instance is disabled\n     * @returns {boolean}\n     */\n\n  }, {\n    key: 'isDisabled',\n    value: function isDisabled() {\n      return this.disabled === true;\n    }\n\n    /**\n     * Disables the widget and the input if any\n     *\n     * @fires disable\n     * @returns {boolean}\n     */\n\n  }, {\n    key: 'disable',\n    value: function disable() {\n      if (this.hasInput()) {\n        this.input.prop('disabled', true);\n      }\n      this.disabled = true;\n\n      /**\n       * (Colorpicker) When the widget has been disabled.\n       *\n       * @event disable\n       */\n      this.element.trigger({\n        type: 'disable',\n        color: this.color,\n        value: this.getValue()\n      });\n      return true;\n    }\n\n    /**\n     * Enables the widget and the input if any\n     *\n     * @fires enable\n     * @returns {boolean}\n     */\n\n  }, {\n    key: 'enable',\n    value: function enable() {\n      if (this.hasInput()) {\n        this.input.prop('disabled', false);\n      }\n      this.disabled = false;\n\n      /**\n       * (Colorpicker) When the widget has been enabled.\n       *\n       * @event enable\n       */\n      this.element.trigger({\n        type: 'enable',\n        color: this.color,\n        value: this.getValue()\n      });\n      return true;\n    }\n\n    /**\n     * Function triggered when clicking in one of the color adjustment bars\n     *\n     * @fires mousemove\n     * @param {Event} e\n     * @returns {boolean}\n     */\n\n  }, {\n    key: 'mousedown',\n    value: function mousedown(e) {\n      if (!e.pageX && !e.pageY && e.originalEvent && e.originalEvent.touches) {\n        e.pageX = e.originalEvent.touches[0].pageX;\n        e.pageY = e.originalEvent.touches[0].pageY;\n      }\n      e.stopPropagation();\n      e.preventDefault();\n\n      var target = (0, _jquery2.default)(e.target);\n\n      // detect the slider and set the limits and callbacks\n      var zone = target.closest('div');\n      var sl = this.options.horizontal ? this.options.slidersHorz : this.options.sliders;\n\n      if (!zone.is('.colorpicker')) {\n        if (zone.is('.colorpicker-saturation')) {\n          this.currentSlider = _jquery2.default.extend({}, sl.saturation);\n        } else if (zone.is('.colorpicker-hue')) {\n          this.currentSlider = _jquery2.default.extend({}, sl.hue);\n        } else if (zone.is('.colorpicker-alpha')) {\n          this.currentSlider = _jquery2.default.extend({}, sl.alpha);\n        } else {\n          return false;\n        }\n        var offset = zone.offset();\n        // reference to guide's style\n\n        this.currentSlider.guide = zone.find('.colorpicker-guide')[0].style;\n        this.currentSlider.left = e.pageX - offset.left;\n        this.currentSlider.top = e.pageY - offset.top;\n        this.mousePointer = {\n          left: e.pageX,\n          top: e.pageY\n        };\n\n        /**\n         * (window.document) Triggered on mousedown for the document object,\n         * so the color adjustment guide is moved to the clicked position.\n         *\n         * @event mousemove\n         */\n        (0, _jquery2.default)(window.document).on({\n          'mousemove.colorpicker': _jquery2.default.proxy(this.mousemove, this),\n          'touchmove.colorpicker': _jquery2.default.proxy(this.mousemove, this),\n          'mouseup.colorpicker': _jquery2.default.proxy(this.mouseup, this),\n          'touchend.colorpicker': _jquery2.default.proxy(this.mouseup, this)\n        }).trigger('mousemove');\n      }\n      return false;\n    }\n\n    /**\n     * Function triggered when dragging a guide inside one of the color adjustment bars.\n     *\n     * @fires changeColor\n     * @param {Event} e\n     * @returns {boolean}\n     */\n\n  }, {\n    key: 'mousemove',\n    value: function mousemove(e) {\n      if (!this.hasColor()) {\n        return null;\n      }\n\n      if (!e.pageX && !e.pageY && e.originalEvent && e.originalEvent.touches) {\n        e.pageX = e.originalEvent.touches[0].pageX;\n        e.pageY = e.originalEvent.touches[0].pageY;\n      }\n      e.stopPropagation();\n      e.preventDefault();\n      var left = Math.max(0, Math.min(this.currentSlider.maxLeft, this.currentSlider.left + ((e.pageX || this.mousePointer.left) - this.mousePointer.left)));\n      var top = Math.max(0, Math.min(this.currentSlider.maxTop, this.currentSlider.top + ((e.pageY || this.mousePointer.top) - this.mousePointer.top)));\n\n      this.currentSlider.guide.left = left + 'px';\n      this.currentSlider.guide.top = top + 'px';\n      if (this.currentSlider.callLeft) {\n        this.color[this.currentSlider.callLeft].call(this.color, left / this.currentSlider.maxLeft);\n      }\n      if (this.currentSlider.callTop) {\n        this.color[this.currentSlider.callTop].call(this.color, top / this.currentSlider.maxTop);\n      }\n\n      this.update(true);\n\n      /**\n       * (Colorpicker) When the color guides have been dragged.\n       *\n       * @event changeColor\n       */\n      this.element.trigger({\n        type: 'changeColor',\n        color: this.color\n      });\n      return false;\n    }\n\n    /**\n     * Function triggered when releasing the click in one of the color adjustment bars.\n     *\n     * @param {Event} e\n     * @returns {boolean}\n     */\n\n  }, {\n    key: 'mouseup',\n    value: function mouseup(e) {\n      e.stopPropagation();\n      e.preventDefault();\n      (0, _jquery2.default)(window.document).off({\n        'mousemove.colorpicker': this.mousemove,\n        'touchmove.colorpicker': this.mousemove,\n        'mouseup.colorpicker': this.mouseup,\n        'touchend.colorpicker': this.mouseup\n      });\n      return false;\n    }\n\n    /**\n     * Function triggered when the input has changed, so the colorpicker gets updated.\n     *\n     * @param {Event} e\n     * @returns {boolean}\n     */\n\n  }, {\n    key: 'change',\n    value: function change(e) {\n      this.keyup(e);\n    }\n\n    /**\n     * Function triggered after a keyboard key has been released.\n     *\n     * @fires changeColor\n     * @param {Event} e\n     * @returns {boolean}\n     */\n\n  }, {\n    key: 'keyup',\n    value: function keyup(e) {\n      this.color = this.createColor(this.input.val());\n      if (this.getValue(false) !== false) {\n        this.updateComponent();\n        this.updatePicker();\n      }\n\n      /**\n       * (Colorpicker) When a keyboard key has been released.\n       *\n       * @event changeColor\n       */\n      this.element.trigger({\n        type: 'changeColor',\n        color: this.color,\n        value: this.input.val()\n      });\n    }\n  }, {\n    key: 'format',\n    get: function get() {\n      if (this.options.format) {\n        return this.options.format;\n      }\n\n      if (this.hasColor() && this.color.hasTransparency() && this.color.format.match(/^hex/)) {\n        return this.options.enableHex8 ? 'hex8' : 'rgba';\n      }\n\n      return null;\n    }\n  }]);\n\n  return Colorpicker;\n}();\n\nexports.default = Colorpicker;\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * @module\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _tinycolor2 = __webpack_require__(4);\n\nvar _tinycolor3 = _interopRequireDefault(_tinycolor2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar defaultFallbackColor = '#000000';\nvar defaultFallbackFormat = 'hex';\n\nfunction unwrapColor(color) {\n  if (color instanceof _tinycolor3.default) {\n    return {\n      r: color._r,\n      g: color._g,\n      b: color._b,\n      a: color._a\n    };\n  }\n  return color;\n}\n\n/**\n * Color manipulation class.\n */\n\nvar Color = function (_tinycolor) {\n  _inherits(Color, _tinycolor);\n\n  _createClass(Color, [{\n    key: 'id',\n\n    /**\n     * Identifier of the color instance.\n     *\n     * @type {int}\n     * @readonly\n     */\n    get: function get() {\n      return this._tc_id;\n    }\n\n    /**\n     * Format of the parsed color.\n     *\n     * @type {String}\n     * @readonly\n     */\n\n  }, {\n    key: 'format',\n    get: function get() {\n      return this._format;\n    }\n\n    /**\n     * All options of the current instance.\n     *\n     * @type {{format: String, gradientType: String, fallbackColor: *}}\n     * @readonly\n     */\n\n  }, {\n    key: 'options',\n    get: function get() {\n      return {\n        format: this._format,\n        gradientType: this._gradientType,\n        fallbackColor: this._fallbackColor\n      };\n    }\n\n    /**\n     * @returns {{h, s, v, a}}\n     */\n\n  }, {\n    key: 'hsva',\n    get: function get() {\n      return this.toHsv();\n    }\n\n    /**\n     * @returns {{h, s, v, a}}\n     */\n\n  }, {\n    key: 'hsvaRatio',\n    get: function get() {\n      var hsv = this.hsva;\n\n      return {\n        h: hsv.h / 360,\n        s: hsv.s,\n        v: hsv.v,\n        a: hsv.a\n      };\n    }\n\n    /**\n     * foo bar\n     * @param {Color|*} color\n     * @param {{fallbackColor, format}} [options]\n     * @constructor\n     */\n\n  }]);\n\n  function Color(color) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : { fallbackColor: defaultFallbackColor, format: null };\n\n    _classCallCheck(this, Color);\n\n    /**\n     * @type {Color|*}\n     */\n    var _this = _possibleConstructorReturn(this, (Color.__proto__ || Object.getPrototypeOf(Color)).call(this, unwrapColor(color), options));\n\n    _this._originalInput = color;\n\n    /**\n     * @type {Color|*}\n     */\n    _this._fallbackColor = unwrapColor(options.fallbackColor);\n\n    _this._validOrFallback();\n    return _this;\n  }\n\n  /**\n   * Imports all variables of the given color to this instance, excepting `_tc_id`.\n   * @param {Color} color\n   */\n\n\n  _createClass(Color, [{\n    key: 'importColor',\n    value: function importColor(color) {\n      if (!color instanceof _tinycolor3.default) {\n        throw new Error('Color.importColor: The color argument is not an instance of tinycolor.');\n      }\n      this._originalInput = color._originalInput;\n      this._r = color._r;\n      this._g = color._g;\n      this._b = color._b;\n      this._a = color._a;\n      this._roundA = color._roundA;\n      this._format = color._format;\n      this._gradientType = color._gradientType;\n      this._ok = color._ok;\n      // omit color._tc_id import\n    }\n\n    /**\n     * Imports the _r, _g, _b, _a and _ok variables of the given color to this instance.\n     * @param {Color} color\n     */\n\n  }, {\n    key: 'importRgb',\n    value: function importRgb(color) {\n      if (!color instanceof _tinycolor3.default) {\n        throw new Error('Color.importColor: The color argument is not an instance of tinycolor.');\n      }\n      this._r = color._r;\n      this._g = color._g;\n      this._b = color._b;\n      this._a = color._a;\n      this._ok = color._ok;\n    }\n\n    /**\n     * @param {{h,s,v,a}} hsv\n     */\n\n  }, {\n    key: 'importHsv',\n    value: function importHsv(hsv) {\n      this.importRgb(new Color(hsv, this.options));\n    }\n\n    /**\n     * If the current color is not valid, applies the fallback and,\n     * in case the fallback is neither valid, applies the default fallback.\n     *\n     * @returns {boolean}\n     */\n\n  }, {\n    key: '_validOrFallback',\n    value: function _validOrFallback() {\n      if (!this.isValid()) {\n        var fallbackOptions = Object.assign({}, this.options);\n\n        if (!fallbackOptions.format) {\n          fallbackOptions.format = defaultFallbackFormat;\n        }\n        // given color is invalid\n        this.importColor((0, _tinycolor3.default)(this._fallbackColor, fallbackOptions));\n\n        if (!this.isValid()) {\n          // fallback color is invalid\n          this.importColor((0, _tinycolor3.default)(defaultFallbackColor, fallbackOptions));\n        }\n        return false;\n      }\n      return true;\n    }\n\n    /**\n     * @returns {Color}\n     */\n\n  }, {\n    key: 'getCopy',\n    value: function getCopy() {\n      return new Color(this.hsva, this.options);\n    }\n\n    /**\n     * @returns {Color}\n     */\n\n  }, {\n    key: 'getHueOnlyCopy',\n    value: function getHueOnlyCopy() {\n      return new Color(Object.assign({}, this.hsva, { s: 100, v: 100 }), this.options);\n    }\n\n    /**\n     * @returns {Color}\n     */\n\n  }, {\n    key: 'getOpaqueCopy',\n    value: function getOpaqueCopy() {\n      return new Color(Object.assign({}, this.hsva, { a: 1 }), this.options);\n    }\n\n    /**\n     * @param {number} h Degrees from 0 to 360\n     */\n\n  }, {\n    key: 'setHue',\n    value: function setHue(h) {\n      this.importHsv(Object.assign({}, this.hsva, { h: h }));\n    }\n\n    /**\n     * @param {number} s Percent from 0 o 100\n     */\n\n  }, {\n    key: 'setSaturation',\n    value: function setSaturation(s) {\n      this.importHsv(Object.assign({}, this.hsva, { s: s }));\n    }\n\n    /**\n     * @param {number} v Percent from 0 o 100\n     */\n\n  }, {\n    key: 'setBrightness',\n    value: function setBrightness(v) {\n      this.importHsv(Object.assign({}, this.hsva, { v: v }));\n    }\n\n    /**\n     * @param {number} h Ratio from 0.0 to 1.0\n     */\n\n  }, {\n    key: 'setHueRatio',\n    value: function setHueRatio(h) {\n      if (h === 0) {\n        return;\n      }\n      this.setHue((1 - h) * 360);\n    }\n\n    /**\n     * @param {number} s Ratio from 0.0 to 1.0\n     */\n\n  }, {\n    key: 'setSaturationRatio',\n    value: function setSaturationRatio(s) {\n      this.setSaturation(s);\n    }\n\n    /**\n     * @param {number} v Ratio from 0.0 to 1.0\n     */\n\n  }, {\n    key: 'setBrightnessRatio',\n    value: function setBrightnessRatio(v) {\n      this.setBrightness(1 - v);\n    }\n\n    /**\n     * @param {number} a Ratio from 0.0 to 1.0\n     */\n\n  }, {\n    key: 'setAlphaRatio',\n    value: function setAlphaRatio(a) {\n      this.setAlpha(1 - a);\n    }\n\n    /**\n     * @returns {boolean}\n     */\n\n  }, {\n    key: 'isTransparent',\n    value: function isTransparent() {\n      return this._a === 0;\n    }\n\n    /**\n     * @returns {boolean}\n     */\n\n  }, {\n    key: 'hasTransparency',\n    value: function hasTransparency() {\n      return this._a !== 1;\n    }\n\n    /**\n     * @param {string|null} [format] One of \"rgb\", \"prgb\", \"hex\"/\"hex6\", \"hex3\", \"hex8\", \"hsl\", \"hsv\"/\"hsb\", \"name\"\n     * @returns {String}\n     */\n\n  }, {\n    key: 'toString',\n    value: function toString() {\n      var format = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\n      format = (format ? format : this.format).replace(/a$/g, '').toLowerCase();\n\n      var colorStr = _get(Color.prototype.__proto__ || Object.getPrototypeOf(Color.prototype), 'toString', this).call(this, format);\n\n      if (format.match(/hex/gi) && !format.match(/hex8/gi)) {\n        if (this.isTransparent() && this._r === 0 && this._g === 0 && this._b === 0) {\n          return 'transparent';\n        }\n\n        if (Color.names.hasOwnProperty(colorStr)) {\n          return colorStr;\n        }\n      }\n\n      return colorStr;\n    }\n  }]);\n\n  return Color;\n}(_tinycolor3.default);\n\nexports.default = Color;\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;// TinyColor v1.4.1\n// https://github.com/bgrins/TinyColor\n// Brian Grinstead, MIT License\n\n(function(Math) {\n\nvar trimLeft = /^\\s+/,\n    trimRight = /\\s+$/,\n    tinyCounter = 0,\n    mathRound = Math.round,\n    mathMin = Math.min,\n    mathMax = Math.max,\n    mathRandom = Math.random;\n\nfunction tinycolor (color, opts) {\n\n    color = (color) ? color : '';\n    opts = opts || { };\n\n    // If input is already a tinycolor, return itself\n    if (color instanceof tinycolor) {\n       return color;\n    }\n    // If we are called as a function, call using new instead\n    if (!(this instanceof tinycolor)) {\n        return new tinycolor(color, opts);\n    }\n\n    var rgb = inputToRGB(color);\n    this._originalInput = color,\n    this._r = rgb.r,\n    this._g = rgb.g,\n    this._b = rgb.b,\n    this._a = rgb.a,\n    this._roundA = mathRound(100*this._a) / 100,\n    this._format = opts.format || rgb.format;\n    this._gradientType = opts.gradientType;\n\n    // Don't let the range of [0,255] come back in [0,1].\n    // Potentially lose a little bit of precision here, but will fix issues where\n    // .5 gets interpreted as half of the total, instead of half of 1\n    // If it was supposed to be 128, this was already taken care of by `inputToRgb`\n    if (this._r < 1) { this._r = mathRound(this._r); }\n    if (this._g < 1) { this._g = mathRound(this._g); }\n    if (this._b < 1) { this._b = mathRound(this._b); }\n\n    this._ok = rgb.ok;\n    this._tc_id = tinyCounter++;\n}\n\ntinycolor.prototype = {\n    isDark: function() {\n        return this.getBrightness() < 128;\n    },\n    isLight: function() {\n        return !this.isDark();\n    },\n    isValid: function() {\n        return this._ok;\n    },\n    getOriginalInput: function() {\n      return this._originalInput;\n    },\n    getFormat: function() {\n        return this._format;\n    },\n    getAlpha: function() {\n        return this._a;\n    },\n    getBrightness: function() {\n        //http://www.w3.org/TR/AERT#color-contrast\n        var rgb = this.toRgb();\n        return (rgb.r * 299 + rgb.g * 587 + rgb.b * 114) / 1000;\n    },\n    getLuminance: function() {\n        //http://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef\n        var rgb = this.toRgb();\n        var RsRGB, GsRGB, BsRGB, R, G, B;\n        RsRGB = rgb.r/255;\n        GsRGB = rgb.g/255;\n        BsRGB = rgb.b/255;\n\n        if (RsRGB <= 0.03928) {R = RsRGB / 12.92;} else {R = Math.pow(((RsRGB + 0.055) / 1.055), 2.4);}\n        if (GsRGB <= 0.03928) {G = GsRGB / 12.92;} else {G = Math.pow(((GsRGB + 0.055) / 1.055), 2.4);}\n        if (BsRGB <= 0.03928) {B = BsRGB / 12.92;} else {B = Math.pow(((BsRGB + 0.055) / 1.055), 2.4);}\n        return (0.2126 * R) + (0.7152 * G) + (0.0722 * B);\n    },\n    setAlpha: function(value) {\n        this._a = boundAlpha(value);\n        this._roundA = mathRound(100*this._a) / 100;\n        return this;\n    },\n    toHsv: function() {\n        var hsv = rgbToHsv(this._r, this._g, this._b);\n        return { h: hsv.h * 360, s: hsv.s, v: hsv.v, a: this._a };\n    },\n    toHsvString: function() {\n        var hsv = rgbToHsv(this._r, this._g, this._b);\n        var h = mathRound(hsv.h * 360), s = mathRound(hsv.s * 100), v = mathRound(hsv.v * 100);\n        return (this._a == 1) ?\n          \"hsv(\"  + h + \", \" + s + \"%, \" + v + \"%)\" :\n          \"hsva(\" + h + \", \" + s + \"%, \" + v + \"%, \"+ this._roundA + \")\";\n    },\n    toHsl: function() {\n        var hsl = rgbToHsl(this._r, this._g, this._b);\n        return { h: hsl.h * 360, s: hsl.s, l: hsl.l, a: this._a };\n    },\n    toHslString: function() {\n        var hsl = rgbToHsl(this._r, this._g, this._b);\n        var h = mathRound(hsl.h * 360), s = mathRound(hsl.s * 100), l = mathRound(hsl.l * 100);\n        return (this._a == 1) ?\n          \"hsl(\"  + h + \", \" + s + \"%, \" + l + \"%)\" :\n          \"hsla(\" + h + \", \" + s + \"%, \" + l + \"%, \"+ this._roundA + \")\";\n    },\n    toHex: function(allow3Char) {\n        return rgbToHex(this._r, this._g, this._b, allow3Char);\n    },\n    toHexString: function(allow3Char) {\n        return '#' + this.toHex(allow3Char);\n    },\n    toHex8: function(allow4Char) {\n        return rgbaToHex(this._r, this._g, this._b, this._a, allow4Char);\n    },\n    toHex8String: function(allow4Char) {\n        return '#' + this.toHex8(allow4Char);\n    },\n    toRgb: function() {\n        return { r: mathRound(this._r), g: mathRound(this._g), b: mathRound(this._b), a: this._a };\n    },\n    toRgbString: function() {\n        return (this._a == 1) ?\n          \"rgb(\"  + mathRound(this._r) + \", \" + mathRound(this._g) + \", \" + mathRound(this._b) + \")\" :\n          \"rgba(\" + mathRound(this._r) + \", \" + mathRound(this._g) + \", \" + mathRound(this._b) + \", \" + this._roundA + \")\";\n    },\n    toPercentageRgb: function() {\n        return { r: mathRound(bound01(this._r, 255) * 100) + \"%\", g: mathRound(bound01(this._g, 255) * 100) + \"%\", b: mathRound(bound01(this._b, 255) * 100) + \"%\", a: this._a };\n    },\n    toPercentageRgbString: function() {\n        return (this._a == 1) ?\n          \"rgb(\"  + mathRound(bound01(this._r, 255) * 100) + \"%, \" + mathRound(bound01(this._g, 255) * 100) + \"%, \" + mathRound(bound01(this._b, 255) * 100) + \"%)\" :\n          \"rgba(\" + mathRound(bound01(this._r, 255) * 100) + \"%, \" + mathRound(bound01(this._g, 255) * 100) + \"%, \" + mathRound(bound01(this._b, 255) * 100) + \"%, \" + this._roundA + \")\";\n    },\n    toName: function() {\n        if (this._a === 0) {\n            return \"transparent\";\n        }\n\n        if (this._a < 1) {\n            return false;\n        }\n\n        return hexNames[rgbToHex(this._r, this._g, this._b, true)] || false;\n    },\n    toFilter: function(secondColor) {\n        var hex8String = '#' + rgbaToArgbHex(this._r, this._g, this._b, this._a);\n        var secondHex8String = hex8String;\n        var gradientType = this._gradientType ? \"GradientType = 1, \" : \"\";\n\n        if (secondColor) {\n            var s = tinycolor(secondColor);\n            secondHex8String = '#' + rgbaToArgbHex(s._r, s._g, s._b, s._a);\n        }\n\n        return \"progid:DXImageTransform.Microsoft.gradient(\"+gradientType+\"startColorstr=\"+hex8String+\",endColorstr=\"+secondHex8String+\")\";\n    },\n    toString: function(format) {\n        var formatSet = !!format;\n        format = format || this._format;\n\n        var formattedString = false;\n        var hasAlpha = this._a < 1 && this._a >= 0;\n        var needsAlphaFormat = !formatSet && hasAlpha && (format === \"hex\" || format === \"hex6\" || format === \"hex3\" || format === \"hex4\" || format === \"hex8\" || format === \"name\");\n\n        if (needsAlphaFormat) {\n            // Special case for \"transparent\", all other non-alpha formats\n            // will return rgba when there is transparency.\n            if (format === \"name\" && this._a === 0) {\n                return this.toName();\n            }\n            return this.toRgbString();\n        }\n        if (format === \"rgb\") {\n            formattedString = this.toRgbString();\n        }\n        if (format === \"prgb\") {\n            formattedString = this.toPercentageRgbString();\n        }\n        if (format === \"hex\" || format === \"hex6\") {\n            formattedString = this.toHexString();\n        }\n        if (format === \"hex3\") {\n            formattedString = this.toHexString(true);\n        }\n        if (format === \"hex4\") {\n            formattedString = this.toHex8String(true);\n        }\n        if (format === \"hex8\") {\n            formattedString = this.toHex8String();\n        }\n        if (format === \"name\") {\n            formattedString = this.toName();\n        }\n        if (format === \"hsl\") {\n            formattedString = this.toHslString();\n        }\n        if (format === \"hsv\") {\n            formattedString = this.toHsvString();\n        }\n\n        return formattedString || this.toHexString();\n    },\n    clone: function() {\n        return tinycolor(this.toString());\n    },\n\n    _applyModification: function(fn, args) {\n        var color = fn.apply(null, [this].concat([].slice.call(args)));\n        this._r = color._r;\n        this._g = color._g;\n        this._b = color._b;\n        this.setAlpha(color._a);\n        return this;\n    },\n    lighten: function() {\n        return this._applyModification(lighten, arguments);\n    },\n    brighten: function() {\n        return this._applyModification(brighten, arguments);\n    },\n    darken: function() {\n        return this._applyModification(darken, arguments);\n    },\n    desaturate: function() {\n        return this._applyModification(desaturate, arguments);\n    },\n    saturate: function() {\n        return this._applyModification(saturate, arguments);\n    },\n    greyscale: function() {\n        return this._applyModification(greyscale, arguments);\n    },\n    spin: function() {\n        return this._applyModification(spin, arguments);\n    },\n\n    _applyCombination: function(fn, args) {\n        return fn.apply(null, [this].concat([].slice.call(args)));\n    },\n    analogous: function() {\n        return this._applyCombination(analogous, arguments);\n    },\n    complement: function() {\n        return this._applyCombination(complement, arguments);\n    },\n    monochromatic: function() {\n        return this._applyCombination(monochromatic, arguments);\n    },\n    splitcomplement: function() {\n        return this._applyCombination(splitcomplement, arguments);\n    },\n    triad: function() {\n        return this._applyCombination(triad, arguments);\n    },\n    tetrad: function() {\n        return this._applyCombination(tetrad, arguments);\n    }\n};\n\n// If input is an object, force 1 into \"1.0\" to handle ratios properly\n// String input requires \"1.0\" as input, so 1 will be treated as 1\ntinycolor.fromRatio = function(color, opts) {\n    if (typeof color == \"object\") {\n        var newColor = {};\n        for (var i in color) {\n            if (color.hasOwnProperty(i)) {\n                if (i === \"a\") {\n                    newColor[i] = color[i];\n                }\n                else {\n                    newColor[i] = convertToPercentage(color[i]);\n                }\n            }\n        }\n        color = newColor;\n    }\n\n    return tinycolor(color, opts);\n};\n\n// Given a string or object, convert that input to RGB\n// Possible string inputs:\n//\n//     \"red\"\n//     \"#f00\" or \"f00\"\n//     \"#ff0000\" or \"ff0000\"\n//     \"#ff000000\" or \"ff000000\"\n//     \"rgb 255 0 0\" or \"rgb (255, 0, 0)\"\n//     \"rgb 1.0 0 0\" or \"rgb (1, 0, 0)\"\n//     \"rgba (255, 0, 0, 1)\" or \"rgba 255, 0, 0, 1\"\n//     \"rgba (1.0, 0, 0, 1)\" or \"rgba 1.0, 0, 0, 1\"\n//     \"hsl(0, 100%, 50%)\" or \"hsl 0 100% 50%\"\n//     \"hsla(0, 100%, 50%, 1)\" or \"hsla 0 100% 50%, 1\"\n//     \"hsv(0, 100%, 100%)\" or \"hsv 0 100% 100%\"\n//\nfunction inputToRGB(color) {\n\n    var rgb = { r: 0, g: 0, b: 0 };\n    var a = 1;\n    var s = null;\n    var v = null;\n    var l = null;\n    var ok = false;\n    var format = false;\n\n    if (typeof color == \"string\") {\n        color = stringInputToObject(color);\n    }\n\n    if (typeof color == \"object\") {\n        if (isValidCSSUnit(color.r) && isValidCSSUnit(color.g) && isValidCSSUnit(color.b)) {\n            rgb = rgbToRgb(color.r, color.g, color.b);\n            ok = true;\n            format = String(color.r).substr(-1) === \"%\" ? \"prgb\" : \"rgb\";\n        }\n        else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.v)) {\n            s = convertToPercentage(color.s);\n            v = convertToPercentage(color.v);\n            rgb = hsvToRgb(color.h, s, v);\n            ok = true;\n            format = \"hsv\";\n        }\n        else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.l)) {\n            s = convertToPercentage(color.s);\n            l = convertToPercentage(color.l);\n            rgb = hslToRgb(color.h, s, l);\n            ok = true;\n            format = \"hsl\";\n        }\n\n        if (color.hasOwnProperty(\"a\")) {\n            a = color.a;\n        }\n    }\n\n    a = boundAlpha(a);\n\n    return {\n        ok: ok,\n        format: color.format || format,\n        r: mathMin(255, mathMax(rgb.r, 0)),\n        g: mathMin(255, mathMax(rgb.g, 0)),\n        b: mathMin(255, mathMax(rgb.b, 0)),\n        a: a\n    };\n}\n\n\n// Conversion Functions\n// --------------------\n\n// `rgbToHsl`, `rgbToHsv`, `hslToRgb`, `hsvToRgb` modified from:\n// <http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript>\n\n// `rgbToRgb`\n// Handle bounds / percentage checking to conform to CSS color spec\n// <http://www.w3.org/TR/css3-color/>\n// *Assumes:* r, g, b in [0, 255] or [0, 1]\n// *Returns:* { r, g, b } in [0, 255]\nfunction rgbToRgb(r, g, b){\n    return {\n        r: bound01(r, 255) * 255,\n        g: bound01(g, 255) * 255,\n        b: bound01(b, 255) * 255\n    };\n}\n\n// `rgbToHsl`\n// Converts an RGB color value to HSL.\n// *Assumes:* r, g, and b are contained in [0, 255] or [0, 1]\n// *Returns:* { h, s, l } in [0,1]\nfunction rgbToHsl(r, g, b) {\n\n    r = bound01(r, 255);\n    g = bound01(g, 255);\n    b = bound01(b, 255);\n\n    var max = mathMax(r, g, b), min = mathMin(r, g, b);\n    var h, s, l = (max + min) / 2;\n\n    if(max == min) {\n        h = s = 0; // achromatic\n    }\n    else {\n        var d = max - min;\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n        switch(max) {\n            case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n            case g: h = (b - r) / d + 2; break;\n            case b: h = (r - g) / d + 4; break;\n        }\n\n        h /= 6;\n    }\n\n    return { h: h, s: s, l: l };\n}\n\n// `hslToRgb`\n// Converts an HSL color value to RGB.\n// *Assumes:* h is contained in [0, 1] or [0, 360] and s and l are contained [0, 1] or [0, 100]\n// *Returns:* { r, g, b } in the set [0, 255]\nfunction hslToRgb(h, s, l) {\n    var r, g, b;\n\n    h = bound01(h, 360);\n    s = bound01(s, 100);\n    l = bound01(l, 100);\n\n    function hue2rgb(p, q, t) {\n        if(t < 0) t += 1;\n        if(t > 1) t -= 1;\n        if(t < 1/6) return p + (q - p) * 6 * t;\n        if(t < 1/2) return q;\n        if(t < 2/3) return p + (q - p) * (2/3 - t) * 6;\n        return p;\n    }\n\n    if(s === 0) {\n        r = g = b = l; // achromatic\n    }\n    else {\n        var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n        var p = 2 * l - q;\n        r = hue2rgb(p, q, h + 1/3);\n        g = hue2rgb(p, q, h);\n        b = hue2rgb(p, q, h - 1/3);\n    }\n\n    return { r: r * 255, g: g * 255, b: b * 255 };\n}\n\n// `rgbToHsv`\n// Converts an RGB color value to HSV\n// *Assumes:* r, g, and b are contained in the set [0, 255] or [0, 1]\n// *Returns:* { h, s, v } in [0,1]\nfunction rgbToHsv(r, g, b) {\n\n    r = bound01(r, 255);\n    g = bound01(g, 255);\n    b = bound01(b, 255);\n\n    var max = mathMax(r, g, b), min = mathMin(r, g, b);\n    var h, s, v = max;\n\n    var d = max - min;\n    s = max === 0 ? 0 : d / max;\n\n    if(max == min) {\n        h = 0; // achromatic\n    }\n    else {\n        switch(max) {\n            case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n            case g: h = (b - r) / d + 2; break;\n            case b: h = (r - g) / d + 4; break;\n        }\n        h /= 6;\n    }\n    return { h: h, s: s, v: v };\n}\n\n// `hsvToRgb`\n// Converts an HSV color value to RGB.\n// *Assumes:* h is contained in [0, 1] or [0, 360] and s and v are contained in [0, 1] or [0, 100]\n// *Returns:* { r, g, b } in the set [0, 255]\n function hsvToRgb(h, s, v) {\n\n    h = bound01(h, 360) * 6;\n    s = bound01(s, 100);\n    v = bound01(v, 100);\n\n    var i = Math.floor(h),\n        f = h - i,\n        p = v * (1 - s),\n        q = v * (1 - f * s),\n        t = v * (1 - (1 - f) * s),\n        mod = i % 6,\n        r = [v, q, p, p, t, v][mod],\n        g = [t, v, v, q, p, p][mod],\n        b = [p, p, t, v, v, q][mod];\n\n    return { r: r * 255, g: g * 255, b: b * 255 };\n}\n\n// `rgbToHex`\n// Converts an RGB color to hex\n// Assumes r, g, and b are contained in the set [0, 255]\n// Returns a 3 or 6 character hex\nfunction rgbToHex(r, g, b, allow3Char) {\n\n    var hex = [\n        pad2(mathRound(r).toString(16)),\n        pad2(mathRound(g).toString(16)),\n        pad2(mathRound(b).toString(16))\n    ];\n\n    // Return a 3 character hex if possible\n    if (allow3Char && hex[0].charAt(0) == hex[0].charAt(1) && hex[1].charAt(0) == hex[1].charAt(1) && hex[2].charAt(0) == hex[2].charAt(1)) {\n        return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0);\n    }\n\n    return hex.join(\"\");\n}\n\n// `rgbaToHex`\n// Converts an RGBA color plus alpha transparency to hex\n// Assumes r, g, b are contained in the set [0, 255] and\n// a in [0, 1]. Returns a 4 or 8 character rgba hex\nfunction rgbaToHex(r, g, b, a, allow4Char) {\n\n    var hex = [\n        pad2(mathRound(r).toString(16)),\n        pad2(mathRound(g).toString(16)),\n        pad2(mathRound(b).toString(16)),\n        pad2(convertDecimalToHex(a))\n    ];\n\n    // Return a 4 character hex if possible\n    if (allow4Char && hex[0].charAt(0) == hex[0].charAt(1) && hex[1].charAt(0) == hex[1].charAt(1) && hex[2].charAt(0) == hex[2].charAt(1) && hex[3].charAt(0) == hex[3].charAt(1)) {\n        return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0) + hex[3].charAt(0);\n    }\n\n    return hex.join(\"\");\n}\n\n// `rgbaToArgbHex`\n// Converts an RGBA color to an ARGB Hex8 string\n// Rarely used, but required for \"toFilter()\"\nfunction rgbaToArgbHex(r, g, b, a) {\n\n    var hex = [\n        pad2(convertDecimalToHex(a)),\n        pad2(mathRound(r).toString(16)),\n        pad2(mathRound(g).toString(16)),\n        pad2(mathRound(b).toString(16))\n    ];\n\n    return hex.join(\"\");\n}\n\n// `equals`\n// Can be called with any tinycolor input\ntinycolor.equals = function (color1, color2) {\n    if (!color1 || !color2) { return false; }\n    return tinycolor(color1).toRgbString() == tinycolor(color2).toRgbString();\n};\n\ntinycolor.random = function() {\n    return tinycolor.fromRatio({\n        r: mathRandom(),\n        g: mathRandom(),\n        b: mathRandom()\n    });\n};\n\n\n// Modification Functions\n// ----------------------\n// Thanks to less.js for some of the basics here\n// <https://github.com/cloudhead/less.js/blob/master/lib/less/functions.js>\n\nfunction desaturate(color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var hsl = tinycolor(color).toHsl();\n    hsl.s -= amount / 100;\n    hsl.s = clamp01(hsl.s);\n    return tinycolor(hsl);\n}\n\nfunction saturate(color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var hsl = tinycolor(color).toHsl();\n    hsl.s += amount / 100;\n    hsl.s = clamp01(hsl.s);\n    return tinycolor(hsl);\n}\n\nfunction greyscale(color) {\n    return tinycolor(color).desaturate(100);\n}\n\nfunction lighten (color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var hsl = tinycolor(color).toHsl();\n    hsl.l += amount / 100;\n    hsl.l = clamp01(hsl.l);\n    return tinycolor(hsl);\n}\n\nfunction brighten(color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var rgb = tinycolor(color).toRgb();\n    rgb.r = mathMax(0, mathMin(255, rgb.r - mathRound(255 * - (amount / 100))));\n    rgb.g = mathMax(0, mathMin(255, rgb.g - mathRound(255 * - (amount / 100))));\n    rgb.b = mathMax(0, mathMin(255, rgb.b - mathRound(255 * - (amount / 100))));\n    return tinycolor(rgb);\n}\n\nfunction darken (color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var hsl = tinycolor(color).toHsl();\n    hsl.l -= amount / 100;\n    hsl.l = clamp01(hsl.l);\n    return tinycolor(hsl);\n}\n\n// Spin takes a positive or negative amount within [-360, 360] indicating the change of hue.\n// Values outside of this range will be wrapped into this range.\nfunction spin(color, amount) {\n    var hsl = tinycolor(color).toHsl();\n    var hue = (hsl.h + amount) % 360;\n    hsl.h = hue < 0 ? 360 + hue : hue;\n    return tinycolor(hsl);\n}\n\n// Combination Functions\n// ---------------------\n// Thanks to jQuery xColor for some of the ideas behind these\n// <https://github.com/infusion/jQuery-xcolor/blob/master/jquery.xcolor.js>\n\nfunction complement(color) {\n    var hsl = tinycolor(color).toHsl();\n    hsl.h = (hsl.h + 180) % 360;\n    return tinycolor(hsl);\n}\n\nfunction triad(color) {\n    var hsl = tinycolor(color).toHsl();\n    var h = hsl.h;\n    return [\n        tinycolor(color),\n        tinycolor({ h: (h + 120) % 360, s: hsl.s, l: hsl.l }),\n        tinycolor({ h: (h + 240) % 360, s: hsl.s, l: hsl.l })\n    ];\n}\n\nfunction tetrad(color) {\n    var hsl = tinycolor(color).toHsl();\n    var h = hsl.h;\n    return [\n        tinycolor(color),\n        tinycolor({ h: (h + 90) % 360, s: hsl.s, l: hsl.l }),\n        tinycolor({ h: (h + 180) % 360, s: hsl.s, l: hsl.l }),\n        tinycolor({ h: (h + 270) % 360, s: hsl.s, l: hsl.l })\n    ];\n}\n\nfunction splitcomplement(color) {\n    var hsl = tinycolor(color).toHsl();\n    var h = hsl.h;\n    return [\n        tinycolor(color),\n        tinycolor({ h: (h + 72) % 360, s: hsl.s, l: hsl.l}),\n        tinycolor({ h: (h + 216) % 360, s: hsl.s, l: hsl.l})\n    ];\n}\n\nfunction analogous(color, results, slices) {\n    results = results || 6;\n    slices = slices || 30;\n\n    var hsl = tinycolor(color).toHsl();\n    var part = 360 / slices;\n    var ret = [tinycolor(color)];\n\n    for (hsl.h = ((hsl.h - (part * results >> 1)) + 720) % 360; --results; ) {\n        hsl.h = (hsl.h + part) % 360;\n        ret.push(tinycolor(hsl));\n    }\n    return ret;\n}\n\nfunction monochromatic(color, results) {\n    results = results || 6;\n    var hsv = tinycolor(color).toHsv();\n    var h = hsv.h, s = hsv.s, v = hsv.v;\n    var ret = [];\n    var modification = 1 / results;\n\n    while (results--) {\n        ret.push(tinycolor({ h: h, s: s, v: v}));\n        v = (v + modification) % 1;\n    }\n\n    return ret;\n}\n\n// Utility Functions\n// ---------------------\n\ntinycolor.mix = function(color1, color2, amount) {\n    amount = (amount === 0) ? 0 : (amount || 50);\n\n    var rgb1 = tinycolor(color1).toRgb();\n    var rgb2 = tinycolor(color2).toRgb();\n\n    var p = amount / 100;\n\n    var rgba = {\n        r: ((rgb2.r - rgb1.r) * p) + rgb1.r,\n        g: ((rgb2.g - rgb1.g) * p) + rgb1.g,\n        b: ((rgb2.b - rgb1.b) * p) + rgb1.b,\n        a: ((rgb2.a - rgb1.a) * p) + rgb1.a\n    };\n\n    return tinycolor(rgba);\n};\n\n\n// Readability Functions\n// ---------------------\n// <http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef (WCAG Version 2)\n\n// `contrast`\n// Analyze the 2 colors and returns the color contrast defined by (WCAG Version 2)\ntinycolor.readability = function(color1, color2) {\n    var c1 = tinycolor(color1);\n    var c2 = tinycolor(color2);\n    return (Math.max(c1.getLuminance(),c2.getLuminance())+0.05) / (Math.min(c1.getLuminance(),c2.getLuminance())+0.05);\n};\n\n// `isReadable`\n// Ensure that foreground and background color combinations meet WCAG2 guidelines.\n// The third argument is an optional Object.\n//      the 'level' property states 'AA' or 'AAA' - if missing or invalid, it defaults to 'AA';\n//      the 'size' property states 'large' or 'small' - if missing or invalid, it defaults to 'small'.\n// If the entire object is absent, isReadable defaults to {level:\"AA\",size:\"small\"}.\n\n// *Example*\n//    tinycolor.isReadable(\"#000\", \"#111\") => false\n//    tinycolor.isReadable(\"#000\", \"#111\",{level:\"AA\",size:\"large\"}) => false\ntinycolor.isReadable = function(color1, color2, wcag2) {\n    var readability = tinycolor.readability(color1, color2);\n    var wcag2Parms, out;\n\n    out = false;\n\n    wcag2Parms = validateWCAG2Parms(wcag2);\n    switch (wcag2Parms.level + wcag2Parms.size) {\n        case \"AAsmall\":\n        case \"AAAlarge\":\n            out = readability >= 4.5;\n            break;\n        case \"AAlarge\":\n            out = readability >= 3;\n            break;\n        case \"AAAsmall\":\n            out = readability >= 7;\n            break;\n    }\n    return out;\n\n};\n\n// `mostReadable`\n// Given a base color and a list of possible foreground or background\n// colors for that base, returns the most readable color.\n// Optionally returns Black or White if the most readable color is unreadable.\n// *Example*\n//    tinycolor.mostReadable(tinycolor.mostReadable(\"#123\", [\"#124\", \"#125\"],{includeFallbackColors:false}).toHexString(); // \"#112255\"\n//    tinycolor.mostReadable(tinycolor.mostReadable(\"#123\", [\"#124\", \"#125\"],{includeFallbackColors:true}).toHexString();  // \"#ffffff\"\n//    tinycolor.mostReadable(\"#a8015a\", [\"#faf3f3\"],{includeFallbackColors:true,level:\"AAA\",size:\"large\"}).toHexString(); // \"#faf3f3\"\n//    tinycolor.mostReadable(\"#a8015a\", [\"#faf3f3\"],{includeFallbackColors:true,level:\"AAA\",size:\"small\"}).toHexString(); // \"#ffffff\"\ntinycolor.mostReadable = function(baseColor, colorList, args) {\n    var bestColor = null;\n    var bestScore = 0;\n    var readability;\n    var includeFallbackColors, level, size ;\n    args = args || {};\n    includeFallbackColors = args.includeFallbackColors ;\n    level = args.level;\n    size = args.size;\n\n    for (var i= 0; i < colorList.length ; i++) {\n        readability = tinycolor.readability(baseColor, colorList[i]);\n        if (readability > bestScore) {\n            bestScore = readability;\n            bestColor = tinycolor(colorList[i]);\n        }\n    }\n\n    if (tinycolor.isReadable(baseColor, bestColor, {\"level\":level,\"size\":size}) || !includeFallbackColors) {\n        return bestColor;\n    }\n    else {\n        args.includeFallbackColors=false;\n        return tinycolor.mostReadable(baseColor,[\"#fff\", \"#000\"],args);\n    }\n};\n\n\n// Big List of Colors\n// ------------------\n// <http://www.w3.org/TR/css3-color/#svg-color>\nvar names = tinycolor.names = {\n    aliceblue: \"f0f8ff\",\n    antiquewhite: \"faebd7\",\n    aqua: \"0ff\",\n    aquamarine: \"7fffd4\",\n    azure: \"f0ffff\",\n    beige: \"f5f5dc\",\n    bisque: \"ffe4c4\",\n    black: \"000\",\n    blanchedalmond: \"ffebcd\",\n    blue: \"00f\",\n    blueviolet: \"8a2be2\",\n    brown: \"a52a2a\",\n    burlywood: \"deb887\",\n    burntsienna: \"ea7e5d\",\n    cadetblue: \"5f9ea0\",\n    chartreuse: \"7fff00\",\n    chocolate: \"d2691e\",\n    coral: \"ff7f50\",\n    cornflowerblue: \"6495ed\",\n    cornsilk: \"fff8dc\",\n    crimson: \"dc143c\",\n    cyan: \"0ff\",\n    darkblue: \"00008b\",\n    darkcyan: \"008b8b\",\n    darkgoldenrod: \"b8860b\",\n    darkgray: \"a9a9a9\",\n    darkgreen: \"006400\",\n    darkgrey: \"a9a9a9\",\n    darkkhaki: \"bdb76b\",\n    darkmagenta: \"8b008b\",\n    darkolivegreen: \"556b2f\",\n    darkorange: \"ff8c00\",\n    darkorchid: \"9932cc\",\n    darkred: \"8b0000\",\n    darksalmon: \"e9967a\",\n    darkseagreen: \"8fbc8f\",\n    darkslateblue: \"483d8b\",\n    darkslategray: \"2f4f4f\",\n    darkslategrey: \"2f4f4f\",\n    darkturquoise: \"00ced1\",\n    darkviolet: \"9400d3\",\n    deeppink: \"ff1493\",\n    deepskyblue: \"00bfff\",\n    dimgray: \"696969\",\n    dimgrey: \"696969\",\n    dodgerblue: \"1e90ff\",\n    firebrick: \"b22222\",\n    floralwhite: \"fffaf0\",\n    forestgreen: \"228b22\",\n    fuchsia: \"f0f\",\n    gainsboro: \"dcdcdc\",\n    ghostwhite: \"f8f8ff\",\n    gold: \"ffd700\",\n    goldenrod: \"daa520\",\n    gray: \"808080\",\n    green: \"008000\",\n    greenyellow: \"adff2f\",\n    grey: \"808080\",\n    honeydew: \"f0fff0\",\n    hotpink: \"ff69b4\",\n    indianred: \"cd5c5c\",\n    indigo: \"4b0082\",\n    ivory: \"fffff0\",\n    khaki: \"f0e68c\",\n    lavender: \"e6e6fa\",\n    lavenderblush: \"fff0f5\",\n    lawngreen: \"7cfc00\",\n    lemonchiffon: \"fffacd\",\n    lightblue: \"add8e6\",\n    lightcoral: \"f08080\",\n    lightcyan: \"e0ffff\",\n    lightgoldenrodyellow: \"fafad2\",\n    lightgray: \"d3d3d3\",\n    lightgreen: \"90ee90\",\n    lightgrey: \"d3d3d3\",\n    lightpink: \"ffb6c1\",\n    lightsalmon: \"ffa07a\",\n    lightseagreen: \"20b2aa\",\n    lightskyblue: \"87cefa\",\n    lightslategray: \"789\",\n    lightslategrey: \"789\",\n    lightsteelblue: \"b0c4de\",\n    lightyellow: \"ffffe0\",\n    lime: \"0f0\",\n    limegreen: \"32cd32\",\n    linen: \"faf0e6\",\n    magenta: \"f0f\",\n    maroon: \"800000\",\n    mediumaquamarine: \"66cdaa\",\n    mediumblue: \"0000cd\",\n    mediumorchid: \"ba55d3\",\n    mediumpurple: \"9370db\",\n    mediumseagreen: \"3cb371\",\n    mediumslateblue: \"7b68ee\",\n    mediumspringgreen: \"00fa9a\",\n    mediumturquoise: \"48d1cc\",\n    mediumvioletred: \"c71585\",\n    midnightblue: \"191970\",\n    mintcream: \"f5fffa\",\n    mistyrose: \"ffe4e1\",\n    moccasin: \"ffe4b5\",\n    navajowhite: \"ffdead\",\n    navy: \"000080\",\n    oldlace: \"fdf5e6\",\n    olive: \"808000\",\n    olivedrab: \"6b8e23\",\n    orange: \"ffa500\",\n    orangered: \"ff4500\",\n    orchid: \"da70d6\",\n    palegoldenrod: \"eee8aa\",\n    palegreen: \"98fb98\",\n    paleturquoise: \"afeeee\",\n    palevioletred: \"db7093\",\n    papayawhip: \"ffefd5\",\n    peachpuff: \"ffdab9\",\n    peru: \"cd853f\",\n    pink: \"ffc0cb\",\n    plum: \"dda0dd\",\n    powderblue: \"b0e0e6\",\n    purple: \"800080\",\n    rebeccapurple: \"663399\",\n    red: \"f00\",\n    rosybrown: \"bc8f8f\",\n    royalblue: \"4169e1\",\n    saddlebrown: \"8b4513\",\n    salmon: \"fa8072\",\n    sandybrown: \"f4a460\",\n    seagreen: \"2e8b57\",\n    seashell: \"fff5ee\",\n    sienna: \"a0522d\",\n    silver: \"c0c0c0\",\n    skyblue: \"87ceeb\",\n    slateblue: \"6a5acd\",\n    slategray: \"708090\",\n    slategrey: \"708090\",\n    snow: \"fffafa\",\n    springgreen: \"00ff7f\",\n    steelblue: \"4682b4\",\n    tan: \"d2b48c\",\n    teal: \"008080\",\n    thistle: \"d8bfd8\",\n    tomato: \"ff6347\",\n    turquoise: \"40e0d0\",\n    violet: \"ee82ee\",\n    wheat: \"f5deb3\",\n    white: \"fff\",\n    whitesmoke: \"f5f5f5\",\n    yellow: \"ff0\",\n    yellowgreen: \"9acd32\"\n};\n\n// Make it easy to access colors via `hexNames[hex]`\nvar hexNames = tinycolor.hexNames = flip(names);\n\n\n// Utilities\n// ---------\n\n// `{ 'name1': 'val1' }` becomes `{ 'val1': 'name1' }`\nfunction flip(o) {\n    var flipped = { };\n    for (var i in o) {\n        if (o.hasOwnProperty(i)) {\n            flipped[o[i]] = i;\n        }\n    }\n    return flipped;\n}\n\n// Return a valid alpha value [0,1] with all invalid values being set to 1\nfunction boundAlpha(a) {\n    a = parseFloat(a);\n\n    if (isNaN(a) || a < 0 || a > 1) {\n        a = 1;\n    }\n\n    return a;\n}\n\n// Take input from [0, n] and return it as [0, 1]\nfunction bound01(n, max) {\n    if (isOnePointZero(n)) { n = \"100%\"; }\n\n    var processPercent = isPercentage(n);\n    n = mathMin(max, mathMax(0, parseFloat(n)));\n\n    // Automatically convert percentage into number\n    if (processPercent) {\n        n = parseInt(n * max, 10) / 100;\n    }\n\n    // Handle floating point rounding errors\n    if ((Math.abs(n - max) < 0.000001)) {\n        return 1;\n    }\n\n    // Convert into [0, 1] range if it isn't already\n    return (n % max) / parseFloat(max);\n}\n\n// Force a number between 0 and 1\nfunction clamp01(val) {\n    return mathMin(1, mathMax(0, val));\n}\n\n// Parse a base-16 hex value into a base-10 integer\nfunction parseIntFromHex(val) {\n    return parseInt(val, 16);\n}\n\n// Need to handle 1.0 as 100%, since once it is a number, there is no difference between it and 1\n// <http://stackoverflow.com/questions/7422072/javascript-how-to-detect-number-as-a-decimal-including-1-0>\nfunction isOnePointZero(n) {\n    return typeof n == \"string\" && n.indexOf('.') != -1 && parseFloat(n) === 1;\n}\n\n// Check to see if string passed in is a percentage\nfunction isPercentage(n) {\n    return typeof n === \"string\" && n.indexOf('%') != -1;\n}\n\n// Force a hex value to have 2 characters\nfunction pad2(c) {\n    return c.length == 1 ? '0' + c : '' + c;\n}\n\n// Replace a decimal with it's percentage value\nfunction convertToPercentage(n) {\n    if (n <= 1) {\n        n = (n * 100) + \"%\";\n    }\n\n    return n;\n}\n\n// Converts a decimal to a hex value\nfunction convertDecimalToHex(d) {\n    return Math.round(parseFloat(d) * 255).toString(16);\n}\n// Converts a hex value to a decimal\nfunction convertHexToDecimal(h) {\n    return (parseIntFromHex(h) / 255);\n}\n\nvar matchers = (function() {\n\n    // <http://www.w3.org/TR/css3-values/#integers>\n    var CSS_INTEGER = \"[-\\\\+]?\\\\d+%?\";\n\n    // <http://www.w3.org/TR/css3-values/#number-value>\n    var CSS_NUMBER = \"[-\\\\+]?\\\\d*\\\\.\\\\d+%?\";\n\n    // Allow positive/negative integer/number.  Don't capture the either/or, just the entire outcome.\n    var CSS_UNIT = \"(?:\" + CSS_NUMBER + \")|(?:\" + CSS_INTEGER + \")\";\n\n    // Actual matching.\n    // Parentheses and commas are optional, but not required.\n    // Whitespace can take the place of commas or opening paren\n    var PERMISSIVE_MATCH3 = \"[\\\\s|\\\\(]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")\\\\s*\\\\)?\";\n    var PERMISSIVE_MATCH4 = \"[\\\\s|\\\\(]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")\\\\s*\\\\)?\";\n\n    return {\n        CSS_UNIT: new RegExp(CSS_UNIT),\n        rgb: new RegExp(\"rgb\" + PERMISSIVE_MATCH3),\n        rgba: new RegExp(\"rgba\" + PERMISSIVE_MATCH4),\n        hsl: new RegExp(\"hsl\" + PERMISSIVE_MATCH3),\n        hsla: new RegExp(\"hsla\" + PERMISSIVE_MATCH4),\n        hsv: new RegExp(\"hsv\" + PERMISSIVE_MATCH3),\n        hsva: new RegExp(\"hsva\" + PERMISSIVE_MATCH4),\n        hex3: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n        hex6: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,\n        hex4: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n        hex8: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/\n    };\n})();\n\n// `isValidCSSUnit`\n// Take in a single string / number and check to see if it looks like a CSS unit\n// (see `matchers` above for definition).\nfunction isValidCSSUnit(color) {\n    return !!matchers.CSS_UNIT.exec(color);\n}\n\n// `stringInputToObject`\n// Permissive string parsing.  Take in a number of formats, and output an object\n// based on detected format.  Returns `{ r, g, b }` or `{ h, s, l }` or `{ h, s, v}`\nfunction stringInputToObject(color) {\n\n    color = color.replace(trimLeft,'').replace(trimRight, '').toLowerCase();\n    var named = false;\n    if (names[color]) {\n        color = names[color];\n        named = true;\n    }\n    else if (color == 'transparent') {\n        return { r: 0, g: 0, b: 0, a: 0, format: \"name\" };\n    }\n\n    // Try to match string input using regular expressions.\n    // Keep most of the number bounding out of this function - don't worry about [0,1] or [0,100] or [0,360]\n    // Just return an object and let the conversion functions handle that.\n    // This way the result will be the same whether the tinycolor is initialized with string or object.\n    var match;\n    if ((match = matchers.rgb.exec(color))) {\n        return { r: match[1], g: match[2], b: match[3] };\n    }\n    if ((match = matchers.rgba.exec(color))) {\n        return { r: match[1], g: match[2], b: match[3], a: match[4] };\n    }\n    if ((match = matchers.hsl.exec(color))) {\n        return { h: match[1], s: match[2], l: match[3] };\n    }\n    if ((match = matchers.hsla.exec(color))) {\n        return { h: match[1], s: match[2], l: match[3], a: match[4] };\n    }\n    if ((match = matchers.hsv.exec(color))) {\n        return { h: match[1], s: match[2], v: match[3] };\n    }\n    if ((match = matchers.hsva.exec(color))) {\n        return { h: match[1], s: match[2], v: match[3], a: match[4] };\n    }\n    if ((match = matchers.hex8.exec(color))) {\n        return {\n            r: parseIntFromHex(match[1]),\n            g: parseIntFromHex(match[2]),\n            b: parseIntFromHex(match[3]),\n            a: convertHexToDecimal(match[4]),\n            format: named ? \"name\" : \"hex8\"\n        };\n    }\n    if ((match = matchers.hex6.exec(color))) {\n        return {\n            r: parseIntFromHex(match[1]),\n            g: parseIntFromHex(match[2]),\n            b: parseIntFromHex(match[3]),\n            format: named ? \"name\" : \"hex\"\n        };\n    }\n    if ((match = matchers.hex4.exec(color))) {\n        return {\n            r: parseIntFromHex(match[1] + '' + match[1]),\n            g: parseIntFromHex(match[2] + '' + match[2]),\n            b: parseIntFromHex(match[3] + '' + match[3]),\n            a: convertHexToDecimal(match[4] + '' + match[4]),\n            format: named ? \"name\" : \"hex8\"\n        };\n    }\n    if ((match = matchers.hex3.exec(color))) {\n        return {\n            r: parseIntFromHex(match[1] + '' + match[1]),\n            g: parseIntFromHex(match[2] + '' + match[2]),\n            b: parseIntFromHex(match[3] + '' + match[3]),\n            format: named ? \"name\" : \"hex\"\n        };\n    }\n\n    return false;\n}\n\nfunction validateWCAG2Parms(parms) {\n    // return valid WCAG2 parms for isReadable.\n    // If input parms are invalid, return {\"level\":\"AA\", \"size\":\"small\"}\n    var level, size;\n    parms = parms || {\"level\":\"AA\", \"size\":\"small\"};\n    level = (parms.level || \"AA\").toUpperCase();\n    size = (parms.size || \"small\").toLowerCase();\n    if (level !== \"AA\" && level !== \"AAA\") {\n        level = \"AA\";\n    }\n    if (size !== \"small\" && size !== \"large\") {\n        size = \"small\";\n    }\n    return {\"level\":level, \"size\":size};\n}\n\n// Node: Export function\nif (typeof module !== \"undefined\" && module.exports) {\n    module.exports = tinycolor;\n}\n// AMD/requirejs: Define the module\nelse if (true) {\n    !(__WEBPACK_AMD_DEFINE_RESULT__ = function () {return tinycolor;}.call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n}\n// Browser: Expose to window\nelse {\n    window.tinycolor = tinycolor;\n}\n\n})(Math);\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * @module\n */\n\n/**\n * Colorpicker default options\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  /**\n   * Horizontal mode layout.\n   *\n   * If true, the hue and alpha channel bars will be rendered horizontally, above the saturation selector.\n   *\n   * @type {boolean}\n   * @default false\n   */\n  horizontal: false,\n  inline: false, // forces to show the colorpicker as an inline element\n  color: false, // forces a color\n  format: false, // forces a format\n  input: 'input', // children input selector\n  container: false, // container selector\n  component: '.add-on, .input-group-addon', // children component selector\n  fallbackColor: false, // fallback color value. null = latest valid color.\n  useHashPrefix: true, // put a '#' (number sign) before hex strings\n  useAlpha: true, // null = auto, false = always hide, true = always show\n  enableHex8: true, // if true the hex8 format will be used whenever there is an alpha channel, otherwise rgba\n  sliders: {\n    saturation: {\n      maxLeft: 100,\n      maxTop: 100,\n      callLeft: 'setSaturationRatio',\n      callTop: 'setBrightnessRatio'\n    },\n    hue: {\n      maxLeft: 0,\n      maxTop: 100,\n      callLeft: false,\n      callTop: 'setHueRatio'\n    },\n    alpha: {\n      maxLeft: 0,\n      maxTop: 100,\n      callLeft: false,\n      callTop: 'setAlphaRatio'\n    }\n  },\n  slidersHorz: {\n    saturation: {\n      maxLeft: 100,\n      maxTop: 100,\n      callLeft: 'setSaturationRatio',\n      callTop: 'setBrightnessRatio'\n    },\n    hue: {\n      maxLeft: 100,\n      maxTop: 0,\n      callLeft: 'setHueRatio',\n      callTop: false\n    },\n    alpha: {\n      maxLeft: 100,\n      maxTop: 0,\n      callLeft: 'setAlphaRatio',\n      callTop: false\n    }\n  },\n  template: '<div class=\"colorpicker dropdown-menu\">\\n    <div class=\"colorpicker-saturation\"><i class=\"colorpicker-guide\"><b></b></i></div>\\n    <div class=\"colorpicker-hue\"><i class=\"colorpicker-guide\"></i></div>\\n    <div class=\"colorpicker-alpha\"><i class=\"colorpicker-guide\"></i></div>\\n    <div class=\"colorpicker-color\"><div /></div>\\n    <div class=\"colorpicker-palette\"></div>\\n  </div>',\n  align: 'right',\n  customClass: null, // custom class added to the colorpicker element\n  colorPalette: null // custom color aliases\n};\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// bootstrap-colorpicker.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap c1d5ee160f686fbc66b6","module.exports = __WEBPACK_EXTERNAL_MODULE_0__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"jQuery\"\n// module id = 0\n// module chunks = 0 1","'use strict';\n\nimport Colorpicker from './Colorpicker';\nimport $ from 'jquery';\n\nlet plugin = 'colorpicker';\n\n$[plugin] = Colorpicker;\n\n$.fn[plugin] = function (option) {\n  let apiArgs = Array.prototype.slice.call(arguments, 1),\n    isSingleElement = (this.length === 1),\n    returnValue = null;\n\n  let $jq = this.each(function () {\n    let $this = $(this),\n      inst = $this.data(plugin),\n      options = ((typeof option === 'object') ? option : {});\n\n    if (!inst) {\n      inst = new Colorpicker(this, options);\n      $this.data(plugin, inst);\n    }\n\n    if (typeof option === 'string') {\n      if ($.isFunction(inst[option])) {\n        returnValue = inst[option].apply(inst, apiArgs);\n      } else { // its a property ?\n        if (apiArgs.length) {\n          // set property\n          inst[option] = apiArgs[0];\n        }\n        returnValue = inst[option];\n      }\n    } else {\n      returnValue = $this;\n    }\n  });\n\n  return isSingleElement ? returnValue : $jq;\n};\n\n$.fn[plugin].constructor = Colorpicker;\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/jquery-plugin.js","'use strict';\n/**\n * @module\n */\n\nimport Color from './Color';\nimport defaults from './defaults';\nimport $ from 'jquery';\n\n/**\n * Colorpicker widget class\n */\nclass Colorpicker {\n  /**\n   * Color class\n   *\n   * @static\n   * @type {Color}\n   */\n  static get Color() {\n    return Color;\n  }\n\n  /**\n   * color getter\n   *\n   * @type {Color|null}\n   */\n  get color() {\n    return this.element.data('color');\n  }\n\n  /**\n   * color setter\n   *\n   * @ignore\n   * @param {Color|null} value\n   */\n  set color(value) {\n    this.element.data('color', value);\n  }\n\n  /**\n   * @fires create\n   * @param {Object|String} element\n   * @param {Object} options\n   * @constructor\n   */\n  constructor(element, options) {\n    /**\n     * @type {*|jQuery}\n     */\n    this.element = $(element).addClass('colorpicker-element');\n    /**\n     * @type {defaults}\n     */\n    this.options = $.extend(true, {}, defaults, this.element.data(), options);\n    /**\n     * @type {*|jQuery}\n     */\n    this.component = this.options.component;\n    this.component = (this.component !== false) ? this.element.find(this.component) : false;\n    if (this.component && (this.component.length === 0)) {\n      this.component = false;\n    }\n    /**\n     * @type {*|jQuery}\n     */\n    this.container = (this.options.container === true) ? this.element : this.options.container;\n    this.container = (this.container !== false) ? $(this.container) : false;\n    /**\n     * @type {*|String}\n     * @private\n     */\n    this.currentSlider = null;\n    /**\n     * @type {{left: number, top: number}}\n     * @private\n     */\n    this.mousePointer = {\n      left: 0,\n      top: 0\n    };\n\n    // Is the element an input? Should we search inside for any input?\n    /**\n     * @type {*|jQuery}\n     */\n    this.input = this.element.is('input') ? this.element : (this.options.input ?\n      this.element.find(this.options.input) : false);\n\n    if (this.input && (this.input.length === 0)) {\n      this.input = false;\n    }\n\n    this.color = this.createColor(this.options.color !== false ? this.options.color : this.getValue());\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.disabled = false;\n\n    // Setup picker\n    let $picker = this.picker = $(this.options.template);\n\n    if (this.options.customClass) {\n      $picker.addClass(this.options.customClass);\n    }\n    if (this.options.inline) {\n      $picker.addClass('colorpicker-inline colorpicker-visible');\n    } else {\n      $picker.addClass('colorpicker-hidden');\n    }\n    if (this.options.horizontal) {\n      $picker.addClass('colorpicker-horizontal');\n    }\n\n    if (\n      (this.options.useAlpha || (this.hasColor() && this.color.hasTransparency())) &&\n      (this.options.useAlpha !== false)\n    ) {\n      this.options.useAlpha = true;\n      $picker.addClass('colorpicker-with-alpha');\n    }\n\n    if (this.options.align === 'right') {\n      $picker.addClass('colorpicker-right');\n    }\n    if (this.options.inline === true) {\n      $picker.addClass('colorpicker-no-arrow');\n    }\n    if (this.options.colorPalette) {\n      let colorpicker = this,\n        selectorsContainer = colorpicker.picker.find('.colorpicker-palette');\n\n      if (selectorsContainer.length > 0) {\n        $.each(this.options.colorPalette, function (name, value) {\n          let $btn = $('<i />')\n            .addClass('colorpicker-palette-color')\n            .css('background-color', value)\n            .attr('title', `${name}: ${value}`)\n            .data('class', name).data('alias', name);\n\n          $btn.on('mousedown.colorpicker touchstart.colorpicker', function (event) {\n            event.preventDefault();\n            colorpicker.setValue($(this).data('alias'));\n          });\n          selectorsContainer.append($btn);\n        });\n        selectorsContainer.show().addClass('colorpicker-visible');\n      }\n    }\n\n    // Prevent closing the colorpicker when clicking on itself\n    $picker.on('mousedown.colorpicker touchstart.colorpicker', $.proxy(function (e) {\n      if (e.target === e.currentTarget) {\n        e.preventDefault();\n      }\n    }, this));\n\n    // Bind click/tap events on the sliders\n    $picker.find('.colorpicker-saturation, .colorpicker-hue, .colorpicker-alpha')\n      .on('mousedown.colorpicker touchstart.colorpicker', $.proxy(this.mousedown, this));\n\n    $picker.appendTo(this.container ? this.container : $('body'));\n\n    // Bind other events\n    if (this.input !== false) {\n      this.input.on({\n        'keyup.colorpicker': $.proxy(this.keyup, this)\n      });\n      this.input.on({\n        'change.colorpicker': $.proxy(this.change, this)\n      });\n      if (this.component === false) {\n        this.element.on({\n          'focus.colorpicker': $.proxy(this.show, this)\n        });\n      }\n      if (this.options.inline === false) {\n        this.element.on({\n          'focusout.colorpicker': $.proxy(this.hide, this)\n        });\n      }\n    }\n\n    if (this.component !== false) {\n      this.component.on({\n        'click.colorpicker': $.proxy(this.show, this)\n      });\n    }\n\n    if ((this.input === false) && (this.component === false)) {\n      this.element.on({\n        'click.colorpicker': $.proxy(this.show, this)\n      });\n    }\n\n    // for HTML5 input[type='color']\n    if ((this.input !== false) && (this.component !== false) && (this.input.attr('type') === 'color')) {\n      this.input.on({\n        'click.colorpicker': $.proxy(this.show, this),\n        'focus.colorpicker': $.proxy(this.show, this)\n      });\n    }\n\n    this.update(this.options.color !== false);\n\n    $($.proxy(function () {\n      /**\n       * (Colorpicker) When the Colorpicker instance has been created and the DOM is ready.\n       *\n       * @event create\n       */\n      this.element.trigger('create');\n    }, this));\n  }\n\n  /**\n   * Destroys the current instance\n   *\n   * @fires destroy\n   */\n  destroy() {\n    this.picker.remove();\n    this.element.removeData('colorpicker', 'color').off('.colorpicker');\n    if (this.input !== false) {\n      this.input.off('.colorpicker');\n    }\n    if (this.component !== false) {\n      this.component.off('.colorpicker');\n    }\n    this.element.removeClass('colorpicker-element');\n\n    /**\n     * (Colorpicker) When the instance is destroyed with all events unbound.\n     *\n     * @event destroy\n     */\n    this.element.trigger({\n      type: 'destroy'\n    });\n  }\n\n  /**\n   * Returns true if the current color object is an instance of Color, false otherwise.\n   * @returns {boolean}\n   */\n  hasColor() {\n    return this.color instanceof Color;\n  }\n\n  get format() {\n    if (this.options.format) {\n      return this.options.format;\n    }\n\n    if (this.hasColor() && this.color.hasTransparency() && this.color.format.match(/^hex/)) {\n      return this.options.enableHex8 ? 'hex8' : 'rgba';\n    }\n\n    return null;\n  }\n\n  /**\n   * Formatted color string, translated to the palette alias if available and with the other formatting options applied\n   * (e.g. useHashPrefix)\n   * @returns {String}\n   */\n  getColorString() {\n    let str = this.color.toString(this.format);\n\n    if (this.options.useHashPrefix === false) {\n      str = str.replace(/^#/g, '');\n    }\n\n    return this.getPaletteColorName(str, this.getPaletteColorName('#' + str, str));\n  }\n\n  /**\n   * Formatted color string, suitable for CSS\n   * @returns {String}\n   */\n  getCssColorString() {\n    return this.color.toString(this.format);\n  }\n\n  /**\n   * If the widget is not inside a container or inline, rearranges its position relative to its element offset.\n   *\n   * @returns {boolean} Returns false if the widget is inside a container or inline, true otherwise\n   */\n  reposition() {\n    if (this.options.inline !== false || this.options.container) {\n      return false;\n    }\n    let type = this.container && this.container[0] !== window.document.body ? 'position' : 'offset';\n    let element = this.component || this.element;\n    let offset = element[type]();\n\n    if (this.options.align === 'right') {\n      offset.left -= this.picker.outerWidth() - element.outerWidth();\n    }\n    this.picker.css({\n      top: offset.top + element.outerHeight(),\n      left: offset.left\n    });\n    return true;\n  }\n\n  /**\n   * Shows the colorpicker widget if hidden.\n   * If the input is disabled this call will be ignored.\n   *\n   * @fires showPicker\n   * @param {Event} [e]\n   */\n  show(e) {\n    if (this.isDisabled()) {\n      // Don't show the widget if it's disabled (the input)\n      return;\n    }\n    this.picker.addClass('colorpicker-visible').removeClass('colorpicker-hidden');\n    this.reposition();\n    $(window).on('resize.colorpicker', $.proxy(this.reposition, this));\n\n    if (e && (!this.hasInput() || this.input.attr('type') === 'color')) {\n      if (e.stopPropagation && e.preventDefault) {\n        e.stopPropagation();\n        e.preventDefault();\n      }\n    }\n    if ((this.component || !this.input) && (this.options.inline === false)) {\n      $(window.document).on({\n        'mousedown.colorpicker': $.proxy(this.hide, this)\n      });\n    }\n\n    /**\n     * (Colorpicker) When show() is called and the widget can be shown.\n     *\n     * @event showPicker\n     */\n    this.element.trigger({\n      type: 'showPicker',\n      color: this.color\n    });\n  }\n\n  /**\n   * Hides the colorpicker widget.\n   * Hide is prevented when it is triggered by an event whose target element has been clicked/touched.\n   *\n   * @fires hidePicker\n   * @param {Event} [e]\n   * @returns {boolean} True if hidden, false if prevented.\n   */\n  hide(e) {\n    if ((typeof e !== 'undefined') && e.target) {\n      // Prevent hide if triggered by an event and an element inside the colorpicker has been clicked/touched\n      if (\n        $(e.currentTarget).parents('.colorpicker').length > 0 ||\n        $(e.target).parents('.colorpicker').length > 0\n      ) {\n        return false;\n      }\n    }\n    this.picker.addClass('colorpicker-hidden').removeClass('colorpicker-visible');\n    $(window).off('resize.colorpicker', this.reposition);\n    $(window.document).off({\n      'mousedown.colorpicker': this.hide\n    });\n    this.update();\n\n    /**\n     * (Colorpicker) When hide() is called and the widget can be hidden.\n     *\n     * @event hidePicker\n     */\n    this.element.trigger({\n      type: 'hidePicker',\n      color: this.color\n    });\n    return true;\n  }\n\n  /**\n   * If the input element is present, it updates the value with the current color object color string.\n   * If value is set, this method fires a \"change\" event on the input element.\n   *\n   * @fires change\n   */\n  updateInput() {\n    if (this.input !== false) {\n      this.input.prop('value', this.getColorString());\n\n      /**\n       * (Input) Triggered on the input element when a new color is selected.\n       *\n       * @event change\n       */\n      this.input.trigger('change');\n    }\n  }\n\n  /**\n   * Changes the color adjustment bars using the current color object information.\n   */\n  updatePicker() {\n    if (!this.hasColor()) {\n      return;\n    }\n\n    let vertical = (this.options.horizontal === false),\n      sl = vertical ? this.options.sliders : this.options.slidersHorz;\n\n    let saturationGuide = this.picker.find('.colorpicker-saturation .colorpicker-guide'),\n      hueGuide = this.picker.find('.colorpicker-hue .colorpicker-guide'),\n      alphaGuide = this.picker.find('.colorpicker-alpha .colorpicker-guide');\n\n    let hsva = this.color.hsvaRatio;\n\n    if (hueGuide.length) {\n      hueGuide.css(vertical ? 'top' : 'left', (vertical ? sl.hue.maxTop : sl.hue.maxLeft) * (1 - hsva.h));\n    }\n\n    if (alphaGuide.length) {\n      alphaGuide.css(vertical ? 'top' : 'left', (vertical ? sl.alpha.maxTop : sl.alpha.maxLeft) * (1 - hsva.a));\n    }\n\n    if (saturationGuide.length) {\n      saturationGuide.css({\n        'top': sl.saturation.maxTop - hsva.v * sl.saturation.maxTop,\n        'left': hsva.s * sl.saturation.maxLeft\n      });\n    }\n\n    this.picker.find('.colorpicker-saturation')\n      .css('backgroundColor', this.color.getHueOnlyCopy().toHexString()); // we only need hue\n\n    this.picker.find('.colorpicker-alpha')\n      .css('backgroundColor', this.color.toString('hex6')); // we don't need alpha\n\n    this.picker.find('.colorpicker-color, .colorpicker-color div')\n      .css('backgroundColor', this.color.toRgbString()); // we need all the channels\n  }\n\n  /**\n   * If the component element is present, its background color is updated\n   */\n  updateComponent() {\n    if (!this.hasColor()) {\n      return;\n    }\n\n    if (this.component !== false) {\n      let icn = this.component.find('i').eq(0);\n\n      if (icn.length > 0) {\n        icn.css({\n          'backgroundColor': this.getCssColorString()\n        });\n      } else {\n        this.component.css({\n          'backgroundColor': this.getCssColorString()\n        });\n      }\n    }\n  }\n\n  /**\n   * Updated the component color, the input value and the widget if a color is present.\n   *\n   * If force is true, it is updated anyway.\n   *\n   * @param {boolean} force\n   */\n  update(force) {\n    if (this.hasColor() && ((this.getValue(false) !== false) || (force === true))) {\n      // Update only if the current value (from input or data) is not empty\n      this.updateComponent();\n      this.updateInput();\n      this.updatePicker();\n    }\n  }\n\n  /**\n   * Returns the color string from the input value or the 'data-color' attribute of the input or element.\n   * If empty, it returns the defaultValue parameter.\n   *\n   * @param {String|*} [defaultValue]\n   * @returns {String|*}\n   */\n  getValue(defaultValue = null) {\n    defaultValue = (typeof defaultValue === 'undefined') ? this.options.fallbackColor : defaultValue;\n    let candidates = [], val = false;\n\n    if (this.hasInput()) {\n      candidates.push(this.input.val());\n      candidates.push(this.input.data('color'));\n    }\n    candidates.push(this.element.data('color'));\n\n    candidates.map((item) => {\n      if (item && (val === false)) {\n        val = item;\n      }\n    });\n\n    val = ((val === false) ? defaultValue : val);\n\n    if (val instanceof Color) {\n      return val.toString(this.format);\n    }\n\n    return val;\n  }\n\n  /**\n   * Sets the color manually\n   *\n   * @fires changeColor\n   * @param {String|Color} val\n   */\n  setValue(val) {\n    this.color = this.createColor(val);\n    this.update(true);\n\n    /**\n     * (Colorpicker) When the color is set programmatically with setValue().\n     *\n     * @event changeColor\n     */\n    this.element.trigger({\n      type: 'changeColor',\n      color: this.color,\n      value: val\n    });\n  }\n\n  /**\n   * Creates a new color using the widget instance options (fallbackColor, format).\n   *\n   * @param {*} val\n   * @returns {Color}\n   */\n  createColor(val) {\n    val = val ? val : null;\n    let fallback = this.options.fallbackColor ? this.options.fallbackColor : (this.hasColor() ? this.color.hsva : null);\n\n    val = this.getPaletteColor(val, val);\n    fallback = this.getPaletteColor(fallback, fallback);\n\n    let color = new Color(val, {fallbackColor: fallback, format: this.format});\n\n    if (color.hasTransparency() && !this.options.useAlpha) {\n      // alpha is disabled\n      return color.getOpaqueCopy();\n    }\n\n    return color;\n  }\n\n  /**\n   * Given a colorName (alias), returns the corresponding color code or defaultValue.\n   *\n   * @param {String} colorName\n   * @param {*} defaultValue\n   * @returns {*}\n   */\n  getPaletteColor(colorName, defaultValue = null) {\n    if (!(typeof colorName === 'string') || !this.options.colorPalette) {\n      return defaultValue;\n    }\n    if (this.options.colorPalette.hasOwnProperty(colorName)) {\n      return this.options.colorPalette[colorName];\n    }\n    return defaultValue;\n  }\n\n  /**\n   * Given a colorValue, returns the corresponding color name (alias) or defaultValue.\n   *\n   * @param {String} colorValue\n   * @param {*} defaultValue\n   * @returns {*}\n   */\n  getPaletteColorName(colorValue, defaultValue = null) {\n    if (!(typeof colorValue === 'string') || !this.options.colorPalette) {\n      return defaultValue;\n    }\n    for (let colorName in this.options.colorPalette) {\n      if (!this.options.colorPalette.hasOwnProperty(colorName)) {\n        continue;\n      }\n      if (this.options.colorPalette[colorName].toLowerCase() === colorValue.toLowerCase()) {\n        return colorName;\n      }\n    }\n    return defaultValue;\n  }\n\n  /**\n   * Returns true if the widget has an associated input element, false otherwise\n   * @returns {boolean}\n   */\n  hasInput() {\n    return (this.input !== false);\n  }\n\n  /**\n   * Returns true if this instance is disabled\n   * @returns {boolean}\n   */\n  isDisabled() {\n    return this.disabled === true;\n  }\n\n  /**\n   * Disables the widget and the input if any\n   *\n   * @fires disable\n   * @returns {boolean}\n   */\n  disable() {\n    if (this.hasInput()) {\n      this.input.prop('disabled', true);\n    }\n    this.disabled = true;\n\n    /**\n     * (Colorpicker) When the widget has been disabled.\n     *\n     * @event disable\n     */\n    this.element.trigger({\n      type: 'disable',\n      color: this.color,\n      value: this.getValue()\n    });\n    return true;\n  }\n\n  /**\n   * Enables the widget and the input if any\n   *\n   * @fires enable\n   * @returns {boolean}\n   */\n  enable() {\n    if (this.hasInput()) {\n      this.input.prop('disabled', false);\n    }\n    this.disabled = false;\n\n    /**\n     * (Colorpicker) When the widget has been enabled.\n     *\n     * @event enable\n     */\n    this.element.trigger({\n      type: 'enable',\n      color: this.color,\n      value: this.getValue()\n    });\n    return true;\n  }\n\n  /**\n   * Function triggered when clicking in one of the color adjustment bars\n   *\n   * @fires mousemove\n   * @param {Event} e\n   * @returns {boolean}\n   */\n  mousedown(e) {\n    if (!e.pageX && !e.pageY && e.originalEvent && e.originalEvent.touches) {\n      e.pageX = e.originalEvent.touches[0].pageX;\n      e.pageY = e.originalEvent.touches[0].pageY;\n    }\n    e.stopPropagation();\n    e.preventDefault();\n\n    let target = $(e.target);\n\n    // detect the slider and set the limits and callbacks\n    let zone = target.closest('div');\n    let sl = this.options.horizontal ? this.options.slidersHorz : this.options.sliders;\n\n    if (!zone.is('.colorpicker')) {\n      if (zone.is('.colorpicker-saturation')) {\n        this.currentSlider = $.extend({}, sl.saturation);\n      } else if (zone.is('.colorpicker-hue')) {\n        this.currentSlider = $.extend({}, sl.hue);\n      } else if (zone.is('.colorpicker-alpha')) {\n        this.currentSlider = $.extend({}, sl.alpha);\n      } else {\n        return false;\n      }\n      let offset = zone.offset();\n      // reference to guide's style\n\n      this.currentSlider.guide = zone.find('.colorpicker-guide')[0].style;\n      this.currentSlider.left = e.pageX - offset.left;\n      this.currentSlider.top = e.pageY - offset.top;\n      this.mousePointer = {\n        left: e.pageX,\n        top: e.pageY\n      };\n\n      /**\n       * (window.document) Triggered on mousedown for the document object,\n       * so the color adjustment guide is moved to the clicked position.\n       *\n       * @event mousemove\n       */\n      $(window.document).on({\n        'mousemove.colorpicker': $.proxy(this.mousemove, this),\n        'touchmove.colorpicker': $.proxy(this.mousemove, this),\n        'mouseup.colorpicker': $.proxy(this.mouseup, this),\n        'touchend.colorpicker': $.proxy(this.mouseup, this)\n      }).trigger('mousemove');\n    }\n    return false;\n  }\n\n  /**\n   * Function triggered when dragging a guide inside one of the color adjustment bars.\n   *\n   * @fires changeColor\n   * @param {Event} e\n   * @returns {boolean}\n   */\n  mousemove(e) {\n    if (!this.hasColor()) {\n      return null;\n    }\n\n    if (!e.pageX && !e.pageY && e.originalEvent && e.originalEvent.touches) {\n      e.pageX = e.originalEvent.touches[0].pageX;\n      e.pageY = e.originalEvent.touches[0].pageY;\n    }\n    e.stopPropagation();\n    e.preventDefault();\n    let left = Math.max(\n      0,\n      Math.min(\n        this.currentSlider.maxLeft,\n        this.currentSlider.left + ((e.pageX || this.mousePointer.left) - this.mousePointer.left)\n      )\n    );\n    let top = Math.max(\n      0,\n      Math.min(\n        this.currentSlider.maxTop,\n        this.currentSlider.top + ((e.pageY || this.mousePointer.top) - this.mousePointer.top)\n      )\n    );\n\n    this.currentSlider.guide.left = left + 'px';\n    this.currentSlider.guide.top = top + 'px';\n    if (this.currentSlider.callLeft) {\n      this.color[this.currentSlider.callLeft].call(this.color, left / this.currentSlider.maxLeft);\n    }\n    if (this.currentSlider.callTop) {\n      this.color[this.currentSlider.callTop].call(this.color, top / this.currentSlider.maxTop);\n    }\n\n    this.update(true);\n\n    /**\n     * (Colorpicker) When the color guides have been dragged.\n     *\n     * @event changeColor\n     */\n    this.element.trigger({\n      type: 'changeColor',\n      color: this.color\n    });\n    return false;\n  }\n\n  /**\n   * Function triggered when releasing the click in one of the color adjustment bars.\n   *\n   * @param {Event} e\n   * @returns {boolean}\n   */\n  mouseup(e) {\n    e.stopPropagation();\n    e.preventDefault();\n    $(window.document).off({\n      'mousemove.colorpicker': this.mousemove,\n      'touchmove.colorpicker': this.mousemove,\n      'mouseup.colorpicker': this.mouseup,\n      'touchend.colorpicker': this.mouseup\n    });\n    return false;\n  }\n\n  /**\n   * Function triggered when the input has changed, so the colorpicker gets updated.\n   *\n   * @param {Event} e\n   * @returns {boolean}\n   */\n  change(e) {\n    this.keyup(e);\n  }\n\n  /**\n   * Function triggered after a keyboard key has been released.\n   *\n   * @fires changeColor\n   * @param {Event} e\n   * @returns {boolean}\n   */\n  keyup(e) {\n    this.color = this.createColor(this.input.val());\n    if (this.getValue(false) !== false) {\n      this.updateComponent();\n      this.updatePicker();\n    }\n\n    /**\n     * (Colorpicker) When a keyboard key has been released.\n     *\n     * @event changeColor\n     */\n    this.element.trigger({\n      type: 'changeColor',\n      color: this.color,\n      value: this.input.val()\n    });\n  }\n}\n\nexport default Colorpicker;\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/Colorpicker.js","'use strict';\n/**\n * @module\n */\n\nimport tinycolor from 'tinycolor2';\n\nlet defaultFallbackColor = '#000000';\nlet defaultFallbackFormat = 'hex';\n\nfunction unwrapColor(color) {\n  if (color instanceof tinycolor) {\n    return {\n      r: color._r,\n      g: color._g,\n      b: color._b,\n      a: color._a\n    };\n  }\n  return color;\n}\n\n/**\n * Color manipulation class.\n */\nclass Color extends tinycolor {\n  /**\n   * Identifier of the color instance.\n   *\n   * @type {int}\n   * @readonly\n   */\n  get id() {\n    return this._tc_id;\n  }\n\n  /**\n   * Format of the parsed color.\n   *\n   * @type {String}\n   * @readonly\n   */\n  get format() {\n    return this._format;\n  }\n\n  /**\n   * All options of the current instance.\n   *\n   * @type {{format: String, gradientType: String, fallbackColor: *}}\n   * @readonly\n   */\n  get options() {\n    return {\n      format: this._format,\n      gradientType: this._gradientType,\n      fallbackColor: this._fallbackColor\n    };\n  }\n\n  /**\n   * @returns {{h, s, v, a}}\n   */\n  get hsva() {\n    return this.toHsv();\n  }\n\n  /**\n   * @returns {{h, s, v, a}}\n   */\n  get hsvaRatio() {\n    let hsv = this.hsva;\n\n    return {\n      h: hsv.h / 360,\n      s: hsv.s,\n      v: hsv.v,\n      a: hsv.a\n    };\n  }\n\n  /**\n   * foo bar\n   * @param {Color|*} color\n   * @param {{fallbackColor, format}} [options]\n   * @constructor\n   */\n  constructor(color, options = {fallbackColor: defaultFallbackColor, format: null}) {\n    super(unwrapColor(color), options);\n\n    /**\n     * @type {Color|*}\n     */\n    this._originalInput = color;\n\n    /**\n     * @type {Color|*}\n     */\n    this._fallbackColor = unwrapColor(options.fallbackColor);\n\n    this._validOrFallback();\n  }\n\n  /**\n   * Imports all variables of the given color to this instance, excepting `_tc_id`.\n   * @param {Color} color\n   */\n  importColor(color) {\n    if (!color instanceof tinycolor) {\n      throw new Error('Color.importColor: The color argument is not an instance of tinycolor.');\n    }\n    this._originalInput = color._originalInput;\n    this._r = color._r;\n    this._g = color._g;\n    this._b = color._b;\n    this._a = color._a;\n    this._roundA = color._roundA;\n    this._format = color._format;\n    this._gradientType = color._gradientType;\n    this._ok = color._ok;\n    // omit color._tc_id import\n  }\n\n  /**\n   * Imports the _r, _g, _b, _a and _ok variables of the given color to this instance.\n   * @param {Color} color\n   */\n  importRgb(color) {\n    if (!color instanceof tinycolor) {\n      throw new Error('Color.importColor: The color argument is not an instance of tinycolor.');\n    }\n    this._r = color._r;\n    this._g = color._g;\n    this._b = color._b;\n    this._a = color._a;\n    this._ok = color._ok;\n  }\n\n  /**\n   * @param {{h,s,v,a}} hsv\n   */\n  importHsv(hsv) {\n    this.importRgb(new Color(hsv, this.options));\n  }\n\n  /**\n   * If the current color is not valid, applies the fallback and,\n   * in case the fallback is neither valid, applies the default fallback.\n   *\n   * @returns {boolean}\n   */\n  _validOrFallback() {\n    if (!this.isValid()) {\n      let fallbackOptions = Object.assign({}, this.options);\n\n      if (!fallbackOptions.format) {\n        fallbackOptions.format = defaultFallbackFormat;\n      }\n      // given color is invalid\n      this.importColor(tinycolor(this._fallbackColor, fallbackOptions));\n\n      if (!this.isValid()) {\n        // fallback color is invalid\n        this.importColor(tinycolor(defaultFallbackColor, fallbackOptions));\n      }\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * @returns {Color}\n   */\n  getCopy() {\n    return new Color(this.hsva, this.options);\n  }\n\n  /**\n   * @returns {Color}\n   */\n  getHueOnlyCopy() {\n    return new Color(Object.assign({}, this.hsva, {s: 100, v: 100}), this.options);\n  }\n\n  /**\n   * @returns {Color}\n   */\n  getOpaqueCopy() {\n    return new Color(Object.assign({}, this.hsva, {a: 1}), this.options);\n  }\n\n  /**\n   * @param {number} h Degrees from 0 to 360\n   */\n  setHue(h) {\n    this.importHsv(Object.assign({}, this.hsva, {h: h}));\n  }\n\n  /**\n   * @param {number} s Percent from 0 o 100\n   */\n  setSaturation(s) {\n    this.importHsv(Object.assign({}, this.hsva, {s: s}));\n  }\n\n  /**\n   * @param {number} v Percent from 0 o 100\n   */\n  setBrightness(v) {\n    this.importHsv(Object.assign({}, this.hsva, {v: v}));\n  }\n\n  /**\n   * @param {number} h Ratio from 0.0 to 1.0\n   */\n  setHueRatio(h) {\n    if (h === 0) {\n      return;\n    }\n    this.setHue((1 - h) * 360);\n  }\n\n  /**\n   * @param {number} s Ratio from 0.0 to 1.0\n   */\n  setSaturationRatio(s) {\n    this.setSaturation(s);\n  }\n\n  /**\n   * @param {number} v Ratio from 0.0 to 1.0\n   */\n  setBrightnessRatio(v) {\n    this.setBrightness(1 - v);\n  }\n\n  /**\n   * @param {number} a Ratio from 0.0 to 1.0\n   */\n  setAlphaRatio(a) {\n    this.setAlpha(1 - a);\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  isTransparent() {\n    return this._a === 0;\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  hasTransparency() {\n    return this._a !== 1;\n  }\n\n  /**\n   * @param {string|null} [format] One of \"rgb\", \"prgb\", \"hex\"/\"hex6\", \"hex3\", \"hex8\", \"hsl\", \"hsv\"/\"hsb\", \"name\"\n   * @returns {String}\n   */\n  toString(format = null) {\n    format = (format ? format : this.format).replace(/a$/g, '').toLowerCase();\n\n    let colorStr = super.toString(format);\n\n    if (format.match(/hex/gi) && !format.match(/hex8/gi)) {\n      if (this.isTransparent() && (this._r === 0) && (this._g === 0) && (this._b === 0)) {\n        return 'transparent';\n      }\n\n      if (Color.names.hasOwnProperty(colorStr)) {\n        return colorStr;\n      }\n    }\n\n    return colorStr;\n  }\n}\n\nexport default Color;\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/Color.js","// TinyColor v1.4.1\n// https://github.com/bgrins/TinyColor\n// Brian Grinstead, MIT License\n\n(function(Math) {\n\nvar trimLeft = /^\\s+/,\n    trimRight = /\\s+$/,\n    tinyCounter = 0,\n    mathRound = Math.round,\n    mathMin = Math.min,\n    mathMax = Math.max,\n    mathRandom = Math.random;\n\nfunction tinycolor (color, opts) {\n\n    color = (color) ? color : '';\n    opts = opts || { };\n\n    // If input is already a tinycolor, return itself\n    if (color instanceof tinycolor) {\n       return color;\n    }\n    // If we are called as a function, call using new instead\n    if (!(this instanceof tinycolor)) {\n        return new tinycolor(color, opts);\n    }\n\n    var rgb = inputToRGB(color);\n    this._originalInput = color,\n    this._r = rgb.r,\n    this._g = rgb.g,\n    this._b = rgb.b,\n    this._a = rgb.a,\n    this._roundA = mathRound(100*this._a) / 100,\n    this._format = opts.format || rgb.format;\n    this._gradientType = opts.gradientType;\n\n    // Don't let the range of [0,255] come back in [0,1].\n    // Potentially lose a little bit of precision here, but will fix issues where\n    // .5 gets interpreted as half of the total, instead of half of 1\n    // If it was supposed to be 128, this was already taken care of by `inputToRgb`\n    if (this._r < 1) { this._r = mathRound(this._r); }\n    if (this._g < 1) { this._g = mathRound(this._g); }\n    if (this._b < 1) { this._b = mathRound(this._b); }\n\n    this._ok = rgb.ok;\n    this._tc_id = tinyCounter++;\n}\n\ntinycolor.prototype = {\n    isDark: function() {\n        return this.getBrightness() < 128;\n    },\n    isLight: function() {\n        return !this.isDark();\n    },\n    isValid: function() {\n        return this._ok;\n    },\n    getOriginalInput: function() {\n      return this._originalInput;\n    },\n    getFormat: function() {\n        return this._format;\n    },\n    getAlpha: function() {\n        return this._a;\n    },\n    getBrightness: function() {\n        //http://www.w3.org/TR/AERT#color-contrast\n        var rgb = this.toRgb();\n        return (rgb.r * 299 + rgb.g * 587 + rgb.b * 114) / 1000;\n    },\n    getLuminance: function() {\n        //http://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef\n        var rgb = this.toRgb();\n        var RsRGB, GsRGB, BsRGB, R, G, B;\n        RsRGB = rgb.r/255;\n        GsRGB = rgb.g/255;\n        BsRGB = rgb.b/255;\n\n        if (RsRGB <= 0.03928) {R = RsRGB / 12.92;} else {R = Math.pow(((RsRGB + 0.055) / 1.055), 2.4);}\n        if (GsRGB <= 0.03928) {G = GsRGB / 12.92;} else {G = Math.pow(((GsRGB + 0.055) / 1.055), 2.4);}\n        if (BsRGB <= 0.03928) {B = BsRGB / 12.92;} else {B = Math.pow(((BsRGB + 0.055) / 1.055), 2.4);}\n        return (0.2126 * R) + (0.7152 * G) + (0.0722 * B);\n    },\n    setAlpha: function(value) {\n        this._a = boundAlpha(value);\n        this._roundA = mathRound(100*this._a) / 100;\n        return this;\n    },\n    toHsv: function() {\n        var hsv = rgbToHsv(this._r, this._g, this._b);\n        return { h: hsv.h * 360, s: hsv.s, v: hsv.v, a: this._a };\n    },\n    toHsvString: function() {\n        var hsv = rgbToHsv(this._r, this._g, this._b);\n        var h = mathRound(hsv.h * 360), s = mathRound(hsv.s * 100), v = mathRound(hsv.v * 100);\n        return (this._a == 1) ?\n          \"hsv(\"  + h + \", \" + s + \"%, \" + v + \"%)\" :\n          \"hsva(\" + h + \", \" + s + \"%, \" + v + \"%, \"+ this._roundA + \")\";\n    },\n    toHsl: function() {\n        var hsl = rgbToHsl(this._r, this._g, this._b);\n        return { h: hsl.h * 360, s: hsl.s, l: hsl.l, a: this._a };\n    },\n    toHslString: function() {\n        var hsl = rgbToHsl(this._r, this._g, this._b);\n        var h = mathRound(hsl.h * 360), s = mathRound(hsl.s * 100), l = mathRound(hsl.l * 100);\n        return (this._a == 1) ?\n          \"hsl(\"  + h + \", \" + s + \"%, \" + l + \"%)\" :\n          \"hsla(\" + h + \", \" + s + \"%, \" + l + \"%, \"+ this._roundA + \")\";\n    },\n    toHex: function(allow3Char) {\n        return rgbToHex(this._r, this._g, this._b, allow3Char);\n    },\n    toHexString: function(allow3Char) {\n        return '#' + this.toHex(allow3Char);\n    },\n    toHex8: function(allow4Char) {\n        return rgbaToHex(this._r, this._g, this._b, this._a, allow4Char);\n    },\n    toHex8String: function(allow4Char) {\n        return '#' + this.toHex8(allow4Char);\n    },\n    toRgb: function() {\n        return { r: mathRound(this._r), g: mathRound(this._g), b: mathRound(this._b), a: this._a };\n    },\n    toRgbString: function() {\n        return (this._a == 1) ?\n          \"rgb(\"  + mathRound(this._r) + \", \" + mathRound(this._g) + \", \" + mathRound(this._b) + \")\" :\n          \"rgba(\" + mathRound(this._r) + \", \" + mathRound(this._g) + \", \" + mathRound(this._b) + \", \" + this._roundA + \")\";\n    },\n    toPercentageRgb: function() {\n        return { r: mathRound(bound01(this._r, 255) * 100) + \"%\", g: mathRound(bound01(this._g, 255) * 100) + \"%\", b: mathRound(bound01(this._b, 255) * 100) + \"%\", a: this._a };\n    },\n    toPercentageRgbString: function() {\n        return (this._a == 1) ?\n          \"rgb(\"  + mathRound(bound01(this._r, 255) * 100) + \"%, \" + mathRound(bound01(this._g, 255) * 100) + \"%, \" + mathRound(bound01(this._b, 255) * 100) + \"%)\" :\n          \"rgba(\" + mathRound(bound01(this._r, 255) * 100) + \"%, \" + mathRound(bound01(this._g, 255) * 100) + \"%, \" + mathRound(bound01(this._b, 255) * 100) + \"%, \" + this._roundA + \")\";\n    },\n    toName: function() {\n        if (this._a === 0) {\n            return \"transparent\";\n        }\n\n        if (this._a < 1) {\n            return false;\n        }\n\n        return hexNames[rgbToHex(this._r, this._g, this._b, true)] || false;\n    },\n    toFilter: function(secondColor) {\n        var hex8String = '#' + rgbaToArgbHex(this._r, this._g, this._b, this._a);\n        var secondHex8String = hex8String;\n        var gradientType = this._gradientType ? \"GradientType = 1, \" : \"\";\n\n        if (secondColor) {\n            var s = tinycolor(secondColor);\n            secondHex8String = '#' + rgbaToArgbHex(s._r, s._g, s._b, s._a);\n        }\n\n        return \"progid:DXImageTransform.Microsoft.gradient(\"+gradientType+\"startColorstr=\"+hex8String+\",endColorstr=\"+secondHex8String+\")\";\n    },\n    toString: function(format) {\n        var formatSet = !!format;\n        format = format || this._format;\n\n        var formattedString = false;\n        var hasAlpha = this._a < 1 && this._a >= 0;\n        var needsAlphaFormat = !formatSet && hasAlpha && (format === \"hex\" || format === \"hex6\" || format === \"hex3\" || format === \"hex4\" || format === \"hex8\" || format === \"name\");\n\n        if (needsAlphaFormat) {\n            // Special case for \"transparent\", all other non-alpha formats\n            // will return rgba when there is transparency.\n            if (format === \"name\" && this._a === 0) {\n                return this.toName();\n            }\n            return this.toRgbString();\n        }\n        if (format === \"rgb\") {\n            formattedString = this.toRgbString();\n        }\n        if (format === \"prgb\") {\n            formattedString = this.toPercentageRgbString();\n        }\n        if (format === \"hex\" || format === \"hex6\") {\n            formattedString = this.toHexString();\n        }\n        if (format === \"hex3\") {\n            formattedString = this.toHexString(true);\n        }\n        if (format === \"hex4\") {\n            formattedString = this.toHex8String(true);\n        }\n        if (format === \"hex8\") {\n            formattedString = this.toHex8String();\n        }\n        if (format === \"name\") {\n            formattedString = this.toName();\n        }\n        if (format === \"hsl\") {\n            formattedString = this.toHslString();\n        }\n        if (format === \"hsv\") {\n            formattedString = this.toHsvString();\n        }\n\n        return formattedString || this.toHexString();\n    },\n    clone: function() {\n        return tinycolor(this.toString());\n    },\n\n    _applyModification: function(fn, args) {\n        var color = fn.apply(null, [this].concat([].slice.call(args)));\n        this._r = color._r;\n        this._g = color._g;\n        this._b = color._b;\n        this.setAlpha(color._a);\n        return this;\n    },\n    lighten: function() {\n        return this._applyModification(lighten, arguments);\n    },\n    brighten: function() {\n        return this._applyModification(brighten, arguments);\n    },\n    darken: function() {\n        return this._applyModification(darken, arguments);\n    },\n    desaturate: function() {\n        return this._applyModification(desaturate, arguments);\n    },\n    saturate: function() {\n        return this._applyModification(saturate, arguments);\n    },\n    greyscale: function() {\n        return this._applyModification(greyscale, arguments);\n    },\n    spin: function() {\n        return this._applyModification(spin, arguments);\n    },\n\n    _applyCombination: function(fn, args) {\n        return fn.apply(null, [this].concat([].slice.call(args)));\n    },\n    analogous: function() {\n        return this._applyCombination(analogous, arguments);\n    },\n    complement: function() {\n        return this._applyCombination(complement, arguments);\n    },\n    monochromatic: function() {\n        return this._applyCombination(monochromatic, arguments);\n    },\n    splitcomplement: function() {\n        return this._applyCombination(splitcomplement, arguments);\n    },\n    triad: function() {\n        return this._applyCombination(triad, arguments);\n    },\n    tetrad: function() {\n        return this._applyCombination(tetrad, arguments);\n    }\n};\n\n// If input is an object, force 1 into \"1.0\" to handle ratios properly\n// String input requires \"1.0\" as input, so 1 will be treated as 1\ntinycolor.fromRatio = function(color, opts) {\n    if (typeof color == \"object\") {\n        var newColor = {};\n        for (var i in color) {\n            if (color.hasOwnProperty(i)) {\n                if (i === \"a\") {\n                    newColor[i] = color[i];\n                }\n                else {\n                    newColor[i] = convertToPercentage(color[i]);\n                }\n            }\n        }\n        color = newColor;\n    }\n\n    return tinycolor(color, opts);\n};\n\n// Given a string or object, convert that input to RGB\n// Possible string inputs:\n//\n//     \"red\"\n//     \"#f00\" or \"f00\"\n//     \"#ff0000\" or \"ff0000\"\n//     \"#ff000000\" or \"ff000000\"\n//     \"rgb 255 0 0\" or \"rgb (255, 0, 0)\"\n//     \"rgb 1.0 0 0\" or \"rgb (1, 0, 0)\"\n//     \"rgba (255, 0, 0, 1)\" or \"rgba 255, 0, 0, 1\"\n//     \"rgba (1.0, 0, 0, 1)\" or \"rgba 1.0, 0, 0, 1\"\n//     \"hsl(0, 100%, 50%)\" or \"hsl 0 100% 50%\"\n//     \"hsla(0, 100%, 50%, 1)\" or \"hsla 0 100% 50%, 1\"\n//     \"hsv(0, 100%, 100%)\" or \"hsv 0 100% 100%\"\n//\nfunction inputToRGB(color) {\n\n    var rgb = { r: 0, g: 0, b: 0 };\n    var a = 1;\n    var s = null;\n    var v = null;\n    var l = null;\n    var ok = false;\n    var format = false;\n\n    if (typeof color == \"string\") {\n        color = stringInputToObject(color);\n    }\n\n    if (typeof color == \"object\") {\n        if (isValidCSSUnit(color.r) && isValidCSSUnit(color.g) && isValidCSSUnit(color.b)) {\n            rgb = rgbToRgb(color.r, color.g, color.b);\n            ok = true;\n            format = String(color.r).substr(-1) === \"%\" ? \"prgb\" : \"rgb\";\n        }\n        else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.v)) {\n            s = convertToPercentage(color.s);\n            v = convertToPercentage(color.v);\n            rgb = hsvToRgb(color.h, s, v);\n            ok = true;\n            format = \"hsv\";\n        }\n        else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.l)) {\n            s = convertToPercentage(color.s);\n            l = convertToPercentage(color.l);\n            rgb = hslToRgb(color.h, s, l);\n            ok = true;\n            format = \"hsl\";\n        }\n\n        if (color.hasOwnProperty(\"a\")) {\n            a = color.a;\n        }\n    }\n\n    a = boundAlpha(a);\n\n    return {\n        ok: ok,\n        format: color.format || format,\n        r: mathMin(255, mathMax(rgb.r, 0)),\n        g: mathMin(255, mathMax(rgb.g, 0)),\n        b: mathMin(255, mathMax(rgb.b, 0)),\n        a: a\n    };\n}\n\n\n// Conversion Functions\n// --------------------\n\n// `rgbToHsl`, `rgbToHsv`, `hslToRgb`, `hsvToRgb` modified from:\n// <http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript>\n\n// `rgbToRgb`\n// Handle bounds / percentage checking to conform to CSS color spec\n// <http://www.w3.org/TR/css3-color/>\n// *Assumes:* r, g, b in [0, 255] or [0, 1]\n// *Returns:* { r, g, b } in [0, 255]\nfunction rgbToRgb(r, g, b){\n    return {\n        r: bound01(r, 255) * 255,\n        g: bound01(g, 255) * 255,\n        b: bound01(b, 255) * 255\n    };\n}\n\n// `rgbToHsl`\n// Converts an RGB color value to HSL.\n// *Assumes:* r, g, and b are contained in [0, 255] or [0, 1]\n// *Returns:* { h, s, l } in [0,1]\nfunction rgbToHsl(r, g, b) {\n\n    r = bound01(r, 255);\n    g = bound01(g, 255);\n    b = bound01(b, 255);\n\n    var max = mathMax(r, g, b), min = mathMin(r, g, b);\n    var h, s, l = (max + min) / 2;\n\n    if(max == min) {\n        h = s = 0; // achromatic\n    }\n    else {\n        var d = max - min;\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n        switch(max) {\n            case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n            case g: h = (b - r) / d + 2; break;\n            case b: h = (r - g) / d + 4; break;\n        }\n\n        h /= 6;\n    }\n\n    return { h: h, s: s, l: l };\n}\n\n// `hslToRgb`\n// Converts an HSL color value to RGB.\n// *Assumes:* h is contained in [0, 1] or [0, 360] and s and l are contained [0, 1] or [0, 100]\n// *Returns:* { r, g, b } in the set [0, 255]\nfunction hslToRgb(h, s, l) {\n    var r, g, b;\n\n    h = bound01(h, 360);\n    s = bound01(s, 100);\n    l = bound01(l, 100);\n\n    function hue2rgb(p, q, t) {\n        if(t < 0) t += 1;\n        if(t > 1) t -= 1;\n        if(t < 1/6) return p + (q - p) * 6 * t;\n        if(t < 1/2) return q;\n        if(t < 2/3) return p + (q - p) * (2/3 - t) * 6;\n        return p;\n    }\n\n    if(s === 0) {\n        r = g = b = l; // achromatic\n    }\n    else {\n        var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n        var p = 2 * l - q;\n        r = hue2rgb(p, q, h + 1/3);\n        g = hue2rgb(p, q, h);\n        b = hue2rgb(p, q, h - 1/3);\n    }\n\n    return { r: r * 255, g: g * 255, b: b * 255 };\n}\n\n// `rgbToHsv`\n// Converts an RGB color value to HSV\n// *Assumes:* r, g, and b are contained in the set [0, 255] or [0, 1]\n// *Returns:* { h, s, v } in [0,1]\nfunction rgbToHsv(r, g, b) {\n\n    r = bound01(r, 255);\n    g = bound01(g, 255);\n    b = bound01(b, 255);\n\n    var max = mathMax(r, g, b), min = mathMin(r, g, b);\n    var h, s, v = max;\n\n    var d = max - min;\n    s = max === 0 ? 0 : d / max;\n\n    if(max == min) {\n        h = 0; // achromatic\n    }\n    else {\n        switch(max) {\n            case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n            case g: h = (b - r) / d + 2; break;\n            case b: h = (r - g) / d + 4; break;\n        }\n        h /= 6;\n    }\n    return { h: h, s: s, v: v };\n}\n\n// `hsvToRgb`\n// Converts an HSV color value to RGB.\n// *Assumes:* h is contained in [0, 1] or [0, 360] and s and v are contained in [0, 1] or [0, 100]\n// *Returns:* { r, g, b } in the set [0, 255]\n function hsvToRgb(h, s, v) {\n\n    h = bound01(h, 360) * 6;\n    s = bound01(s, 100);\n    v = bound01(v, 100);\n\n    var i = Math.floor(h),\n        f = h - i,\n        p = v * (1 - s),\n        q = v * (1 - f * s),\n        t = v * (1 - (1 - f) * s),\n        mod = i % 6,\n        r = [v, q, p, p, t, v][mod],\n        g = [t, v, v, q, p, p][mod],\n        b = [p, p, t, v, v, q][mod];\n\n    return { r: r * 255, g: g * 255, b: b * 255 };\n}\n\n// `rgbToHex`\n// Converts an RGB color to hex\n// Assumes r, g, and b are contained in the set [0, 255]\n// Returns a 3 or 6 character hex\nfunction rgbToHex(r, g, b, allow3Char) {\n\n    var hex = [\n        pad2(mathRound(r).toString(16)),\n        pad2(mathRound(g).toString(16)),\n        pad2(mathRound(b).toString(16))\n    ];\n\n    // Return a 3 character hex if possible\n    if (allow3Char && hex[0].charAt(0) == hex[0].charAt(1) && hex[1].charAt(0) == hex[1].charAt(1) && hex[2].charAt(0) == hex[2].charAt(1)) {\n        return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0);\n    }\n\n    return hex.join(\"\");\n}\n\n// `rgbaToHex`\n// Converts an RGBA color plus alpha transparency to hex\n// Assumes r, g, b are contained in the set [0, 255] and\n// a in [0, 1]. Returns a 4 or 8 character rgba hex\nfunction rgbaToHex(r, g, b, a, allow4Char) {\n\n    var hex = [\n        pad2(mathRound(r).toString(16)),\n        pad2(mathRound(g).toString(16)),\n        pad2(mathRound(b).toString(16)),\n        pad2(convertDecimalToHex(a))\n    ];\n\n    // Return a 4 character hex if possible\n    if (allow4Char && hex[0].charAt(0) == hex[0].charAt(1) && hex[1].charAt(0) == hex[1].charAt(1) && hex[2].charAt(0) == hex[2].charAt(1) && hex[3].charAt(0) == hex[3].charAt(1)) {\n        return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0) + hex[3].charAt(0);\n    }\n\n    return hex.join(\"\");\n}\n\n// `rgbaToArgbHex`\n// Converts an RGBA color to an ARGB Hex8 string\n// Rarely used, but required for \"toFilter()\"\nfunction rgbaToArgbHex(r, g, b, a) {\n\n    var hex = [\n        pad2(convertDecimalToHex(a)),\n        pad2(mathRound(r).toString(16)),\n        pad2(mathRound(g).toString(16)),\n        pad2(mathRound(b).toString(16))\n    ];\n\n    return hex.join(\"\");\n}\n\n// `equals`\n// Can be called with any tinycolor input\ntinycolor.equals = function (color1, color2) {\n    if (!color1 || !color2) { return false; }\n    return tinycolor(color1).toRgbString() == tinycolor(color2).toRgbString();\n};\n\ntinycolor.random = function() {\n    return tinycolor.fromRatio({\n        r: mathRandom(),\n        g: mathRandom(),\n        b: mathRandom()\n    });\n};\n\n\n// Modification Functions\n// ----------------------\n// Thanks to less.js for some of the basics here\n// <https://github.com/cloudhead/less.js/blob/master/lib/less/functions.js>\n\nfunction desaturate(color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var hsl = tinycolor(color).toHsl();\n    hsl.s -= amount / 100;\n    hsl.s = clamp01(hsl.s);\n    return tinycolor(hsl);\n}\n\nfunction saturate(color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var hsl = tinycolor(color).toHsl();\n    hsl.s += amount / 100;\n    hsl.s = clamp01(hsl.s);\n    return tinycolor(hsl);\n}\n\nfunction greyscale(color) {\n    return tinycolor(color).desaturate(100);\n}\n\nfunction lighten (color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var hsl = tinycolor(color).toHsl();\n    hsl.l += amount / 100;\n    hsl.l = clamp01(hsl.l);\n    return tinycolor(hsl);\n}\n\nfunction brighten(color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var rgb = tinycolor(color).toRgb();\n    rgb.r = mathMax(0, mathMin(255, rgb.r - mathRound(255 * - (amount / 100))));\n    rgb.g = mathMax(0, mathMin(255, rgb.g - mathRound(255 * - (amount / 100))));\n    rgb.b = mathMax(0, mathMin(255, rgb.b - mathRound(255 * - (amount / 100))));\n    return tinycolor(rgb);\n}\n\nfunction darken (color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var hsl = tinycolor(color).toHsl();\n    hsl.l -= amount / 100;\n    hsl.l = clamp01(hsl.l);\n    return tinycolor(hsl);\n}\n\n// Spin takes a positive or negative amount within [-360, 360] indicating the change of hue.\n// Values outside of this range will be wrapped into this range.\nfunction spin(color, amount) {\n    var hsl = tinycolor(color).toHsl();\n    var hue = (hsl.h + amount) % 360;\n    hsl.h = hue < 0 ? 360 + hue : hue;\n    return tinycolor(hsl);\n}\n\n// Combination Functions\n// ---------------------\n// Thanks to jQuery xColor for some of the ideas behind these\n// <https://github.com/infusion/jQuery-xcolor/blob/master/jquery.xcolor.js>\n\nfunction complement(color) {\n    var hsl = tinycolor(color).toHsl();\n    hsl.h = (hsl.h + 180) % 360;\n    return tinycolor(hsl);\n}\n\nfunction triad(color) {\n    var hsl = tinycolor(color).toHsl();\n    var h = hsl.h;\n    return [\n        tinycolor(color),\n        tinycolor({ h: (h + 120) % 360, s: hsl.s, l: hsl.l }),\n        tinycolor({ h: (h + 240) % 360, s: hsl.s, l: hsl.l })\n    ];\n}\n\nfunction tetrad(color) {\n    var hsl = tinycolor(color).toHsl();\n    var h = hsl.h;\n    return [\n        tinycolor(color),\n        tinycolor({ h: (h + 90) % 360, s: hsl.s, l: hsl.l }),\n        tinycolor({ h: (h + 180) % 360, s: hsl.s, l: hsl.l }),\n        tinycolor({ h: (h + 270) % 360, s: hsl.s, l: hsl.l })\n    ];\n}\n\nfunction splitcomplement(color) {\n    var hsl = tinycolor(color).toHsl();\n    var h = hsl.h;\n    return [\n        tinycolor(color),\n        tinycolor({ h: (h + 72) % 360, s: hsl.s, l: hsl.l}),\n        tinycolor({ h: (h + 216) % 360, s: hsl.s, l: hsl.l})\n    ];\n}\n\nfunction analogous(color, results, slices) {\n    results = results || 6;\n    slices = slices || 30;\n\n    var hsl = tinycolor(color).toHsl();\n    var part = 360 / slices;\n    var ret = [tinycolor(color)];\n\n    for (hsl.h = ((hsl.h - (part * results >> 1)) + 720) % 360; --results; ) {\n        hsl.h = (hsl.h + part) % 360;\n        ret.push(tinycolor(hsl));\n    }\n    return ret;\n}\n\nfunction monochromatic(color, results) {\n    results = results || 6;\n    var hsv = tinycolor(color).toHsv();\n    var h = hsv.h, s = hsv.s, v = hsv.v;\n    var ret = [];\n    var modification = 1 / results;\n\n    while (results--) {\n        ret.push(tinycolor({ h: h, s: s, v: v}));\n        v = (v + modification) % 1;\n    }\n\n    return ret;\n}\n\n// Utility Functions\n// ---------------------\n\ntinycolor.mix = function(color1, color2, amount) {\n    amount = (amount === 0) ? 0 : (amount || 50);\n\n    var rgb1 = tinycolor(color1).toRgb();\n    var rgb2 = tinycolor(color2).toRgb();\n\n    var p = amount / 100;\n\n    var rgba = {\n        r: ((rgb2.r - rgb1.r) * p) + rgb1.r,\n        g: ((rgb2.g - rgb1.g) * p) + rgb1.g,\n        b: ((rgb2.b - rgb1.b) * p) + rgb1.b,\n        a: ((rgb2.a - rgb1.a) * p) + rgb1.a\n    };\n\n    return tinycolor(rgba);\n};\n\n\n// Readability Functions\n// ---------------------\n// <http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef (WCAG Version 2)\n\n// `contrast`\n// Analyze the 2 colors and returns the color contrast defined by (WCAG Version 2)\ntinycolor.readability = function(color1, color2) {\n    var c1 = tinycolor(color1);\n    var c2 = tinycolor(color2);\n    return (Math.max(c1.getLuminance(),c2.getLuminance())+0.05) / (Math.min(c1.getLuminance(),c2.getLuminance())+0.05);\n};\n\n// `isReadable`\n// Ensure that foreground and background color combinations meet WCAG2 guidelines.\n// The third argument is an optional Object.\n//      the 'level' property states 'AA' or 'AAA' - if missing or invalid, it defaults to 'AA';\n//      the 'size' property states 'large' or 'small' - if missing or invalid, it defaults to 'small'.\n// If the entire object is absent, isReadable defaults to {level:\"AA\",size:\"small\"}.\n\n// *Example*\n//    tinycolor.isReadable(\"#000\", \"#111\") => false\n//    tinycolor.isReadable(\"#000\", \"#111\",{level:\"AA\",size:\"large\"}) => false\ntinycolor.isReadable = function(color1, color2, wcag2) {\n    var readability = tinycolor.readability(color1, color2);\n    var wcag2Parms, out;\n\n    out = false;\n\n    wcag2Parms = validateWCAG2Parms(wcag2);\n    switch (wcag2Parms.level + wcag2Parms.size) {\n        case \"AAsmall\":\n        case \"AAAlarge\":\n            out = readability >= 4.5;\n            break;\n        case \"AAlarge\":\n            out = readability >= 3;\n            break;\n        case \"AAAsmall\":\n            out = readability >= 7;\n            break;\n    }\n    return out;\n\n};\n\n// `mostReadable`\n// Given a base color and a list of possible foreground or background\n// colors for that base, returns the most readable color.\n// Optionally returns Black or White if the most readable color is unreadable.\n// *Example*\n//    tinycolor.mostReadable(tinycolor.mostReadable(\"#123\", [\"#124\", \"#125\"],{includeFallbackColors:false}).toHexString(); // \"#112255\"\n//    tinycolor.mostReadable(tinycolor.mostReadable(\"#123\", [\"#124\", \"#125\"],{includeFallbackColors:true}).toHexString();  // \"#ffffff\"\n//    tinycolor.mostReadable(\"#a8015a\", [\"#faf3f3\"],{includeFallbackColors:true,level:\"AAA\",size:\"large\"}).toHexString(); // \"#faf3f3\"\n//    tinycolor.mostReadable(\"#a8015a\", [\"#faf3f3\"],{includeFallbackColors:true,level:\"AAA\",size:\"small\"}).toHexString(); // \"#ffffff\"\ntinycolor.mostReadable = function(baseColor, colorList, args) {\n    var bestColor = null;\n    var bestScore = 0;\n    var readability;\n    var includeFallbackColors, level, size ;\n    args = args || {};\n    includeFallbackColors = args.includeFallbackColors ;\n    level = args.level;\n    size = args.size;\n\n    for (var i= 0; i < colorList.length ; i++) {\n        readability = tinycolor.readability(baseColor, colorList[i]);\n        if (readability > bestScore) {\n            bestScore = readability;\n            bestColor = tinycolor(colorList[i]);\n        }\n    }\n\n    if (tinycolor.isReadable(baseColor, bestColor, {\"level\":level,\"size\":size}) || !includeFallbackColors) {\n        return bestColor;\n    }\n    else {\n        args.includeFallbackColors=false;\n        return tinycolor.mostReadable(baseColor,[\"#fff\", \"#000\"],args);\n    }\n};\n\n\n// Big List of Colors\n// ------------------\n// <http://www.w3.org/TR/css3-color/#svg-color>\nvar names = tinycolor.names = {\n    aliceblue: \"f0f8ff\",\n    antiquewhite: \"faebd7\",\n    aqua: \"0ff\",\n    aquamarine: \"7fffd4\",\n    azure: \"f0ffff\",\n    beige: \"f5f5dc\",\n    bisque: \"ffe4c4\",\n    black: \"000\",\n    blanchedalmond: \"ffebcd\",\n    blue: \"00f\",\n    blueviolet: \"8a2be2\",\n    brown: \"a52a2a\",\n    burlywood: \"deb887\",\n    burntsienna: \"ea7e5d\",\n    cadetblue: \"5f9ea0\",\n    chartreuse: \"7fff00\",\n    chocolate: \"d2691e\",\n    coral: \"ff7f50\",\n    cornflowerblue: \"6495ed\",\n    cornsilk: \"fff8dc\",\n    crimson: \"dc143c\",\n    cyan: \"0ff\",\n    darkblue: \"00008b\",\n    darkcyan: \"008b8b\",\n    darkgoldenrod: \"b8860b\",\n    darkgray: \"a9a9a9\",\n    darkgreen: \"006400\",\n    darkgrey: \"a9a9a9\",\n    darkkhaki: \"bdb76b\",\n    darkmagenta: \"8b008b\",\n    darkolivegreen: \"556b2f\",\n    darkorange: \"ff8c00\",\n    darkorchid: \"9932cc\",\n    darkred: \"8b0000\",\n    darksalmon: \"e9967a\",\n    darkseagreen: \"8fbc8f\",\n    darkslateblue: \"483d8b\",\n    darkslategray: \"2f4f4f\",\n    darkslategrey: \"2f4f4f\",\n    darkturquoise: \"00ced1\",\n    darkviolet: \"9400d3\",\n    deeppink: \"ff1493\",\n    deepskyblue: \"00bfff\",\n    dimgray: \"696969\",\n    dimgrey: \"696969\",\n    dodgerblue: \"1e90ff\",\n    firebrick: \"b22222\",\n    floralwhite: \"fffaf0\",\n    forestgreen: \"228b22\",\n    fuchsia: \"f0f\",\n    gainsboro: \"dcdcdc\",\n    ghostwhite: \"f8f8ff\",\n    gold: \"ffd700\",\n    goldenrod: \"daa520\",\n    gray: \"808080\",\n    green: \"008000\",\n    greenyellow: \"adff2f\",\n    grey: \"808080\",\n    honeydew: \"f0fff0\",\n    hotpink: \"ff69b4\",\n    indianred: \"cd5c5c\",\n    indigo: \"4b0082\",\n    ivory: \"fffff0\",\n    khaki: \"f0e68c\",\n    lavender: \"e6e6fa\",\n    lavenderblush: \"fff0f5\",\n    lawngreen: \"7cfc00\",\n    lemonchiffon: \"fffacd\",\n    lightblue: \"add8e6\",\n    lightcoral: \"f08080\",\n    lightcyan: \"e0ffff\",\n    lightgoldenrodyellow: \"fafad2\",\n    lightgray: \"d3d3d3\",\n    lightgreen: \"90ee90\",\n    lightgrey: \"d3d3d3\",\n    lightpink: \"ffb6c1\",\n    lightsalmon: \"ffa07a\",\n    lightseagreen: \"20b2aa\",\n    lightskyblue: \"87cefa\",\n    lightslategray: \"789\",\n    lightslategrey: \"789\",\n    lightsteelblue: \"b0c4de\",\n    lightyellow: \"ffffe0\",\n    lime: \"0f0\",\n    limegreen: \"32cd32\",\n    linen: \"faf0e6\",\n    magenta: \"f0f\",\n    maroon: \"800000\",\n    mediumaquamarine: \"66cdaa\",\n    mediumblue: \"0000cd\",\n    mediumorchid: \"ba55d3\",\n    mediumpurple: \"9370db\",\n    mediumseagreen: \"3cb371\",\n    mediumslateblue: \"7b68ee\",\n    mediumspringgreen: \"00fa9a\",\n    mediumturquoise: \"48d1cc\",\n    mediumvioletred: \"c71585\",\n    midnightblue: \"191970\",\n    mintcream: \"f5fffa\",\n    mistyrose: \"ffe4e1\",\n    moccasin: \"ffe4b5\",\n    navajowhite: \"ffdead\",\n    navy: \"000080\",\n    oldlace: \"fdf5e6\",\n    olive: \"808000\",\n    olivedrab: \"6b8e23\",\n    orange: \"ffa500\",\n    orangered: \"ff4500\",\n    orchid: \"da70d6\",\n    palegoldenrod: \"eee8aa\",\n    palegreen: \"98fb98\",\n    paleturquoise: \"afeeee\",\n    palevioletred: \"db7093\",\n    papayawhip: \"ffefd5\",\n    peachpuff: \"ffdab9\",\n    peru: \"cd853f\",\n    pink: \"ffc0cb\",\n    plum: \"dda0dd\",\n    powderblue: \"b0e0e6\",\n    purple: \"800080\",\n    rebeccapurple: \"663399\",\n    red: \"f00\",\n    rosybrown: \"bc8f8f\",\n    royalblue: \"4169e1\",\n    saddlebrown: \"8b4513\",\n    salmon: \"fa8072\",\n    sandybrown: \"f4a460\",\n    seagreen: \"2e8b57\",\n    seashell: \"fff5ee\",\n    sienna: \"a0522d\",\n    silver: \"c0c0c0\",\n    skyblue: \"87ceeb\",\n    slateblue: \"6a5acd\",\n    slategray: \"708090\",\n    slategrey: \"708090\",\n    snow: \"fffafa\",\n    springgreen: \"00ff7f\",\n    steelblue: \"4682b4\",\n    tan: \"d2b48c\",\n    teal: \"008080\",\n    thistle: \"d8bfd8\",\n    tomato: \"ff6347\",\n    turquoise: \"40e0d0\",\n    violet: \"ee82ee\",\n    wheat: \"f5deb3\",\n    white: \"fff\",\n    whitesmoke: \"f5f5f5\",\n    yellow: \"ff0\",\n    yellowgreen: \"9acd32\"\n};\n\n// Make it easy to access colors via `hexNames[hex]`\nvar hexNames = tinycolor.hexNames = flip(names);\n\n\n// Utilities\n// ---------\n\n// `{ 'name1': 'val1' }` becomes `{ 'val1': 'name1' }`\nfunction flip(o) {\n    var flipped = { };\n    for (var i in o) {\n        if (o.hasOwnProperty(i)) {\n            flipped[o[i]] = i;\n        }\n    }\n    return flipped;\n}\n\n// Return a valid alpha value [0,1] with all invalid values being set to 1\nfunction boundAlpha(a) {\n    a = parseFloat(a);\n\n    if (isNaN(a) || a < 0 || a > 1) {\n        a = 1;\n    }\n\n    return a;\n}\n\n// Take input from [0, n] and return it as [0, 1]\nfunction bound01(n, max) {\n    if (isOnePointZero(n)) { n = \"100%\"; }\n\n    var processPercent = isPercentage(n);\n    n = mathMin(max, mathMax(0, parseFloat(n)));\n\n    // Automatically convert percentage into number\n    if (processPercent) {\n        n = parseInt(n * max, 10) / 100;\n    }\n\n    // Handle floating point rounding errors\n    if ((Math.abs(n - max) < 0.000001)) {\n        return 1;\n    }\n\n    // Convert into [0, 1] range if it isn't already\n    return (n % max) / parseFloat(max);\n}\n\n// Force a number between 0 and 1\nfunction clamp01(val) {\n    return mathMin(1, mathMax(0, val));\n}\n\n// Parse a base-16 hex value into a base-10 integer\nfunction parseIntFromHex(val) {\n    return parseInt(val, 16);\n}\n\n// Need to handle 1.0 as 100%, since once it is a number, there is no difference between it and 1\n// <http://stackoverflow.com/questions/7422072/javascript-how-to-detect-number-as-a-decimal-including-1-0>\nfunction isOnePointZero(n) {\n    return typeof n == \"string\" && n.indexOf('.') != -1 && parseFloat(n) === 1;\n}\n\n// Check to see if string passed in is a percentage\nfunction isPercentage(n) {\n    return typeof n === \"string\" && n.indexOf('%') != -1;\n}\n\n// Force a hex value to have 2 characters\nfunction pad2(c) {\n    return c.length == 1 ? '0' + c : '' + c;\n}\n\n// Replace a decimal with it's percentage value\nfunction convertToPercentage(n) {\n    if (n <= 1) {\n        n = (n * 100) + \"%\";\n    }\n\n    return n;\n}\n\n// Converts a decimal to a hex value\nfunction convertDecimalToHex(d) {\n    return Math.round(parseFloat(d) * 255).toString(16);\n}\n// Converts a hex value to a decimal\nfunction convertHexToDecimal(h) {\n    return (parseIntFromHex(h) / 255);\n}\n\nvar matchers = (function() {\n\n    // <http://www.w3.org/TR/css3-values/#integers>\n    var CSS_INTEGER = \"[-\\\\+]?\\\\d+%?\";\n\n    // <http://www.w3.org/TR/css3-values/#number-value>\n    var CSS_NUMBER = \"[-\\\\+]?\\\\d*\\\\.\\\\d+%?\";\n\n    // Allow positive/negative integer/number.  Don't capture the either/or, just the entire outcome.\n    var CSS_UNIT = \"(?:\" + CSS_NUMBER + \")|(?:\" + CSS_INTEGER + \")\";\n\n    // Actual matching.\n    // Parentheses and commas are optional, but not required.\n    // Whitespace can take the place of commas or opening paren\n    var PERMISSIVE_MATCH3 = \"[\\\\s|\\\\(]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")\\\\s*\\\\)?\";\n    var PERMISSIVE_MATCH4 = \"[\\\\s|\\\\(]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")\\\\s*\\\\)?\";\n\n    return {\n        CSS_UNIT: new RegExp(CSS_UNIT),\n        rgb: new RegExp(\"rgb\" + PERMISSIVE_MATCH3),\n        rgba: new RegExp(\"rgba\" + PERMISSIVE_MATCH4),\n        hsl: new RegExp(\"hsl\" + PERMISSIVE_MATCH3),\n        hsla: new RegExp(\"hsla\" + PERMISSIVE_MATCH4),\n        hsv: new RegExp(\"hsv\" + PERMISSIVE_MATCH3),\n        hsva: new RegExp(\"hsva\" + PERMISSIVE_MATCH4),\n        hex3: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n        hex6: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,\n        hex4: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n        hex8: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/\n    };\n})();\n\n// `isValidCSSUnit`\n// Take in a single string / number and check to see if it looks like a CSS unit\n// (see `matchers` above for definition).\nfunction isValidCSSUnit(color) {\n    return !!matchers.CSS_UNIT.exec(color);\n}\n\n// `stringInputToObject`\n// Permissive string parsing.  Take in a number of formats, and output an object\n// based on detected format.  Returns `{ r, g, b }` or `{ h, s, l }` or `{ h, s, v}`\nfunction stringInputToObject(color) {\n\n    color = color.replace(trimLeft,'').replace(trimRight, '').toLowerCase();\n    var named = false;\n    if (names[color]) {\n        color = names[color];\n        named = true;\n    }\n    else if (color == 'transparent') {\n        return { r: 0, g: 0, b: 0, a: 0, format: \"name\" };\n    }\n\n    // Try to match string input using regular expressions.\n    // Keep most of the number bounding out of this function - don't worry about [0,1] or [0,100] or [0,360]\n    // Just return an object and let the conversion functions handle that.\n    // This way the result will be the same whether the tinycolor is initialized with string or object.\n    var match;\n    if ((match = matchers.rgb.exec(color))) {\n        return { r: match[1], g: match[2], b: match[3] };\n    }\n    if ((match = matchers.rgba.exec(color))) {\n        return { r: match[1], g: match[2], b: match[3], a: match[4] };\n    }\n    if ((match = matchers.hsl.exec(color))) {\n        return { h: match[1], s: match[2], l: match[3] };\n    }\n    if ((match = matchers.hsla.exec(color))) {\n        return { h: match[1], s: match[2], l: match[3], a: match[4] };\n    }\n    if ((match = matchers.hsv.exec(color))) {\n        return { h: match[1], s: match[2], v: match[3] };\n    }\n    if ((match = matchers.hsva.exec(color))) {\n        return { h: match[1], s: match[2], v: match[3], a: match[4] };\n    }\n    if ((match = matchers.hex8.exec(color))) {\n        return {\n            r: parseIntFromHex(match[1]),\n            g: parseIntFromHex(match[2]),\n            b: parseIntFromHex(match[3]),\n            a: convertHexToDecimal(match[4]),\n            format: named ? \"name\" : \"hex8\"\n        };\n    }\n    if ((match = matchers.hex6.exec(color))) {\n        return {\n            r: parseIntFromHex(match[1]),\n            g: parseIntFromHex(match[2]),\n            b: parseIntFromHex(match[3]),\n            format: named ? \"name\" : \"hex\"\n        };\n    }\n    if ((match = matchers.hex4.exec(color))) {\n        return {\n            r: parseIntFromHex(match[1] + '' + match[1]),\n            g: parseIntFromHex(match[2] + '' + match[2]),\n            b: parseIntFromHex(match[3] + '' + match[3]),\n            a: convertHexToDecimal(match[4] + '' + match[4]),\n            format: named ? \"name\" : \"hex8\"\n        };\n    }\n    if ((match = matchers.hex3.exec(color))) {\n        return {\n            r: parseIntFromHex(match[1] + '' + match[1]),\n            g: parseIntFromHex(match[2] + '' + match[2]),\n            b: parseIntFromHex(match[3] + '' + match[3]),\n            format: named ? \"name\" : \"hex\"\n        };\n    }\n\n    return false;\n}\n\nfunction validateWCAG2Parms(parms) {\n    // return valid WCAG2 parms for isReadable.\n    // If input parms are invalid, return {\"level\":\"AA\", \"size\":\"small\"}\n    var level, size;\n    parms = parms || {\"level\":\"AA\", \"size\":\"small\"};\n    level = (parms.level || \"AA\").toUpperCase();\n    size = (parms.size || \"small\").toLowerCase();\n    if (level !== \"AA\" && level !== \"AAA\") {\n        level = \"AA\";\n    }\n    if (size !== \"small\" && size !== \"large\") {\n        size = \"small\";\n    }\n    return {\"level\":level, \"size\":size};\n}\n\n// Node: Export function\nif (typeof module !== \"undefined\" && module.exports) {\n    module.exports = tinycolor;\n}\n// AMD/requirejs: Define the module\nelse if (typeof define === 'function' && define.amd) {\n    define(function () {return tinycolor;});\n}\n// Browser: Expose to window\nelse {\n    window.tinycolor = tinycolor;\n}\n\n})(Math);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/tinycolor2/tinycolor.js\n// module id = 4\n// module chunks = 0 1","'use strict';\n/**\n * @module\n */\n\n/**\n * Colorpicker default options\n */\nexport default {\n  /**\n   * Horizontal mode layout.\n   *\n   * If true, the hue and alpha channel bars will be rendered horizontally, above the saturation selector.\n   *\n   * @type {boolean}\n   * @default false\n   */\n  horizontal: false,\n  inline: false, // forces to show the colorpicker as an inline element\n  color: false, // forces a color\n  format: false, // forces a format\n  input: 'input', // children input selector\n  container: false, // container selector\n  component: '.add-on, .input-group-addon', // children component selector\n  fallbackColor: false, // fallback color value. null = latest valid color.\n  useHashPrefix: true, // put a '#' (number sign) before hex strings\n  useAlpha: true, // null = auto, false = always hide, true = always show\n  enableHex8: true, // if true the hex8 format will be used whenever there is an alpha channel, otherwise rgba\n  sliders: {\n    saturation: {\n      maxLeft: 100,\n      maxTop: 100,\n      callLeft: 'setSaturationRatio',\n      callTop: 'setBrightnessRatio'\n    },\n    hue: {\n      maxLeft: 0,\n      maxTop: 100,\n      callLeft: false,\n      callTop: 'setHueRatio'\n    },\n    alpha: {\n      maxLeft: 0,\n      maxTop: 100,\n      callLeft: false,\n      callTop: 'setAlphaRatio'\n    }\n  },\n  slidersHorz: {\n    saturation: {\n      maxLeft: 100,\n      maxTop: 100,\n      callLeft: 'setSaturationRatio',\n      callTop: 'setBrightnessRatio'\n    },\n    hue: {\n      maxLeft: 100,\n      maxTop: 0,\n      callLeft: 'setHueRatio',\n      callTop: false\n    },\n    alpha: {\n      maxLeft: 100,\n      maxTop: 0,\n      callLeft: 'setAlphaRatio',\n      callTop: false\n    }\n  },\n  template: `<div class=\"colorpicker dropdown-menu\">\n    <div class=\"colorpicker-saturation\"><i class=\"colorpicker-guide\"><b></b></i></div>\n    <div class=\"colorpicker-hue\"><i class=\"colorpicker-guide\"></i></div>\n    <div class=\"colorpicker-alpha\"><i class=\"colorpicker-guide\"></i></div>\n    <div class=\"colorpicker-color\"><div /></div>\n    <div class=\"colorpicker-palette\"></div>\n  </div>`,\n  align: 'right',\n  customClass: null, // custom class added to the colorpicker element\n  colorPalette: null // custom color aliases\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/defaults.js"],"sourceRoot":""}